[{"T:\\School\\Click\\Group_09\\Code\\frontend\\src\\index.js":"1","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\store\\configureStore.js":"2","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\App.jsx":"3","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\store\\reducer.js":"4","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\store\\middleware\\logger.js":"5","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\store\\middleware\\toast.js":"6","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\store\\middleware\\api.js":"7","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\ProtectedRoute.jsx":"8","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\pages\\HomeOut.jsx":"9","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\pages\\coming_soon.jsx":"10","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\pages\\Home.jsx":"11","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\components\\Product.jsx":"12","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\pages\\Cart.jsx":"13","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\pages\\ProductList.jsx":"14","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\pages\\ProductDetail.jsx":"15","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\pages\\Register.jsx":"16","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\pages\\CheckOutPage.jsx":"17","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\pages\\OrderPage.jsx":"18","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\pages\\Sign-in.jsx":"19","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\pages\\ForgotPassword.jsx":"20","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\pages\\ResetPassword.jsx":"21","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\components\\Admin\\Layout.jsx":"22","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\components\\Admin\\Products.jsx":"23","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\store\\cart.js":"24","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\responsive.js":"25","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\api\\orders.js":"26","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\api\\products.js":"27","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\api\\authenticate.js":"28","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\components\\Announcement.jsx":"29","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\components\\NavbarOut.jsx":"30","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\components\\Products.jsx":"31","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\components\\Categories.jsx":"32","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\components\\Navbar.jsx":"33","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\config\\index.js":"34","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\components\\Slider.jsx":"35","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\components\\CreditCards\\CreditCards.jsx":"36","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\data.js":"37","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\components\\Cards.jsx":"38","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\components\\CategoryItem.jsx":"39"},{"size":824,"mtime":1681399560976,"results":"40","hashOfConfig":"41"},{"size":476,"mtime":1681399561628,"results":"42","hashOfConfig":"41"},{"size":2015,"mtime":1681399560936,"results":"43","hashOfConfig":"41"},{"size":211,"mtime":1681399561644,"results":"44","hashOfConfig":"41"},{"size":212,"mtime":1681399561703,"results":"45","hashOfConfig":"41"},{"size":303,"mtime":1681399561723,"results":"46","hashOfConfig":"41"},{"size":706,"mtime":1681399561667,"results":"47","hashOfConfig":"41"},{"size":777,"mtime":1681399560995,"results":"48","hashOfConfig":"41"},{"size":541,"mtime":1681399561458,"results":"49","hashOfConfig":"41"},{"size":464,"mtime":1681399561405,"results":"50","hashOfConfig":"41"},{"size":469,"mtime":1681399561441,"results":"51","hashOfConfig":"41"},{"size":3254,"mtime":1681399561232,"results":"52","hashOfConfig":"41"},{"size":7872,"mtime":1681399561368,"results":"53","hashOfConfig":"41"},{"size":598,"mtime":1681399561516,"results":"54","hashOfConfig":"41"},{"size":4753,"mtime":1681399561498,"results":"55","hashOfConfig":"41"},{"size":3269,"mtime":1681399561535,"results":"56","hashOfConfig":"41"},{"size":14231,"mtime":1681399561387,"results":"57","hashOfConfig":"41"},{"size":4345,"mtime":1681399561478,"results":"58","hashOfConfig":"41"},{"size":2440,"mtime":1681399561589,"results":"59","hashOfConfig":"41"},{"size":2489,"mtime":1681399561424,"results":"60","hashOfConfig":"41"},{"size":2890,"mtime":1681399561553,"results":"61","hashOfConfig":"41"},{"size":3297,"mtime":1681402453663,"results":"62","hashOfConfig":"41"},{"size":12046,"mtime":1681399561307,"results":"63","hashOfConfig":"41"},{"size":2208,"mtime":1681399561609,"results":"64","hashOfConfig":"41"},{"size":167,"mtime":1681399561013,"results":"65","hashOfConfig":"41"},{"size":579,"mtime":1681399561052,"results":"66","hashOfConfig":"41"},{"size":1082,"mtime":1681399561071,"results":"67","hashOfConfig":"41"},{"size":1024,"mtime":1681399561034,"results":"68","hashOfConfig":"41"},{"size":550,"mtime":1681399561094,"results":"69","hashOfConfig":"41"},{"size":2517,"mtime":1681399561188,"results":"70","hashOfConfig":"41"},{"size":2733,"mtime":1681399561250,"results":"71","hashOfConfig":"41"},{"size":588,"mtime":1681399561132,"results":"72","hashOfConfig":"41"},{"size":2961,"mtime":1681399561169,"results":"73","hashOfConfig":"41"},{"size":209,"mtime":1681399561348,"results":"74","hashOfConfig":"41"},{"size":2635,"mtime":1681399561268,"results":"75","hashOfConfig":"41"},{"size":4048,"mtime":1681399561328,"results":"76","hashOfConfig":"41"},{"size":1453,"mtime":1681399560955,"results":"77","hashOfConfig":"41"},{"size":3811,"mtime":1681399561114,"results":"78","hashOfConfig":"41"},{"size":1057,"mtime":1681399561151,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"sjnp6d",{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"82"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"82"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"82"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"82"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"82"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"82"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"82"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"82"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"82"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"82"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"82"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"82"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"82"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"82"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"82"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"82"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"82"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"82"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"T:\\School\\Click\\Group_09\\Code\\frontend\\src\\index.js",[],["181","182"],"T:\\School\\Click\\Group_09\\Code\\frontend\\src\\store\\configureStore.js",["183","184","185"],"import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport reducer from \"./reducer\";\nimport logger from \"./middleware/logger\";\nimport toast from \"./middleware/toast\";\nimport {api} from \"./middleware/api\";\n//import {authApi } from \"../api/api\"\nexport default function() {\n  return configureStore({\n    reducer,\n    middleware: [\n      ...getDefaultMiddleware(),\n      //logger({ destination: \"console\" }),\n      //toast,\n      api.middleware\n    ]\n  });\n}\n","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\App.jsx",["186","187"],"import Product from \"./components/Product\";\nimport Home from \"./pages/Home\";\nimport HomeOut from \"./pages/HomeOut\";\nimport Coming_soon from \"./pages/coming_soon\";\nimport SignIn from \"./pages/Sign-in\";\nimport ForgotPassword from \"./pages/ForgotPassword\";\nimport Register from \"./pages/Register\";\nimport ProductList from \"./pages/ProductList\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Cart from \"./pages/Cart\";\nimport ProductDetail from \"./pages/ProductDetail\";\nimport ResetPassword from \"./pages/ResetPassword\";\nimport CheckOutPage from \"./pages/CheckOutPage\";\nimport OrdersPage from \"./pages/OrderPage\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport AdminProducts from \"./components/Admin/Products\";\nimport AdminLayout from \"./components/Admin/Layout\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Routes>\n        <Route exact path=\"/\" element={<Home />} />\n        <Route exact path=\"/Home\" element={<HomeOut />} />\n        <Route exact path=\"/Products\" element={<ProductList />} />\n        <Route exact path=\"/Orders\" element={<OrdersPage />} />\n        <Route exact path=\"/Products/:id\" element={<ProductDetail />} />\n        <Route exact path=\"/Cart\" element={<Cart />} />\n        <Route exact path=\"/Deals\" element={<ProductList />} />\n        <Route exact path=\"/Checkout\" element={\n          <ProtectedRoute>\n            <CheckOutPage checkCart={true} />\n          </ProtectedRoute>\n        } />\n        <Route exact path=\"/Admin/Products\" element={\n          <ProtectedRoute>\n            <AdminLayout admin={true}>\n              <AdminProducts />\n            </AdminLayout>\n          </ProtectedRoute>\n        } />\n        <Route exact path=\"/signin\" element={<SignIn />} />\n        <Route exact path=\"/forgot-password\" element={<ForgotPassword />} />\n        <Route exact path=\"/reset-password\" element={<ResetPassword />} />\n        <Route exact path=\"/register\" element={<Register />} />\n      </Routes>\n    </Router >\n  );\n};\n\nexport default App;\n","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\store\\reducer.js",[],"T:\\School\\Click\\Group_09\\Code\\frontend\\src\\store\\middleware\\logger.js",[],"T:\\School\\Click\\Group_09\\Code\\frontend\\src\\store\\middleware\\toast.js",[],"T:\\School\\Click\\Group_09\\Code\\frontend\\src\\store\\middleware\\api.js",["188"],"import { BASE_URL } from \"../../config\";\n// Or from '@reduxjs/toolkit/query' if not using the auto-generated hooks\nimport { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\n// initialize an empty api service that we'll inject endpoints into later as needed\n\nexport const api = createApi({\n  reducerPath: \"mainApi\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"http://localhost:3000/api/\",\n    prepareHeaders: (headers) => {\n      const token = localStorage.getItem(\"firebaseToken\");\n      if (token && token !== null && token !== \"\") {\n        headers.set(\"Authorization\", `Bearer ${token}`);\n      }\n      return headers;\n    },\n  }),\n  keepUnusedDataFor: 30,\n  endpoints: () => ({}),\n});\n","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\ProtectedRoute.jsx",["189"],"import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { Navigate, useLocation } from \"react-router-dom\"\r\n\r\nconst ProtectedRoute = ({ children, props }) => {\r\n    console.log(props, \"ProtectedRoute\", children);\r\n    const products = useSelector((state) => state.cart.cart);\r\n    let user = localStorage.getItem(\"user\");\r\n    if (user) user = JSON.parse(user);\r\n    if (children.props.admin && !user.admin) {\r\n        return <Navigate to=\"/\" replace />\r\n    }\r\n    if (children.props.checkCart) {\r\n        if (!(products && products.length)) {\r\n            return <Navigate to=\"/Products\" replace />\r\n        }\r\n    }\r\n\r\n    if (!user) {\r\n        return <Navigate to=\"/signin\" replace />\r\n    }\r\n    return children\r\n\r\n};\r\n\r\nexport default ProtectedRoute;","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\pages\\HomeOut.jsx",["190","191","192"],"import React, { useEffect } from \"react\";\r\nimport Announcement from \"../components/Announcement\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport NavbarOut from \"../components/NavbarOut\";\r\nimport Slider from \"../components/Slider\";\r\nimport Categories from \"../components/Categories\";\r\nimport Products from \"../components/Products\";\r\nconst Home = () => {\r\n  return (\r\n    <div>\r\n      <Announcement />\r\n      <NavbarOut />\r\n      <Slider />\r\n      <Categories />\r\n      {/* <Products /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\pages\\coming_soon.jsx",["193","194","195"],"import React from 'react'\nimport Announcement from '../components/Announcement';\nimport Navbar from '../components/Navbar';\nimport Slider from '../components/Slider';\nimport Categories from '../components/Categories';\nimport Products from '../components/Products';\n\nconst Coming_soon = () => {\n    return (\n        <div>\n        <Announcement/>\n        <Navbar/>\n        <h1>Coming soon!</h1>\n        </div>\n            \n      );\n    };\n\nexport default Coming_soon","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\pages\\Home.jsx",["196","197"],"import React, { useEffect } from \"react\";\nimport Announcement from \"../components/Announcement\";\nimport Navbar from \"../components/Navbar\";\nimport Slider from \"../components/Slider\";\nimport Categories from \"../components/Categories\";\nimport Products from \"../components/Products\";\nconst Home = () => {\n  return (\n    <div>\n      <Announcement />\n      <Navbar />\n      <Slider />\n      <Categories />\n      {/* <Products /> */}\n    </div>\n  );\n};\n\nexport default Home;\n","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\components\\Product.jsx",["198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213"],"import React, { useState, useEffect } from \"react\";\nimport {\n  FavoriteBorderOutlined,\n  SearchOutlined,\n  ShoppingCartOutlined,\n} from \"@material-ui/icons\";\nimport styled from \"styled-components\";\nimport Axios from \"axios\";\nimport { IconButton, Typography, Box } from \"@material-ui/core\";\nimport { addToCart } from \"../store/cart\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nconst Info = styled.div`\n  opacity: 0;\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.2);\n  z-index: 3;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.5s ease;\n  cursor: pointer;\n`;\n\nconst Container = styled.div`\n  flex: 1;\n  margin: 5px;\n  min-width: 280px;\n  height: 350px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #f5fbfd;\n  position: relative;\n  &:hover ${Info} {\n    opacity: 1;\n  }\n`;\n\nconst Circle = styled.div`\n  width: 200px;\n  height: 200px;\n  border-radius: 50%;\n  background-color: white;\n  position: absolute;\n`;\n\nconst Image = styled.img`\n  height: 75%;\n  z-index: 2;\n`;\n\nconst Icon = styled.div`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 10px;\n  transition: all 0.5s ease;\n  &:hover {\n    background-color: #e9f5f5;\n    transform: scale(1.1);\n  }\n`;\n\nconst Product = ({ item, hasDiscount }) => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [title, setFoodname] = useState(\"\");\n  const [type, setTypename] = useState(\"\");\n  const [description, setDesc] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [img, setimg] = useState(\"\");\n  const [_id, setid] = useState(\"\");\n\n  const [foodlist, setfoodlist] = useState([]);\n\n  // const insertData= (title)=>{\n  //   Axios.post(`http://localhost:3001/cart/${title}`);\n  // }\n\n  const handleAddToCart = (item) => {\n    dispatch(addToCart(item));\n  };\n\n  return (\n    <Container>\n      <Circle />\n\n      <Image src={item.img} />\n      <Box ml={3}>\n        <Typography\n          style={{\n            fontFamily: \"Outfit\",\n            fontStyle: \"normal\",\n            fontWeight: \"600\",\n            fontSize: \"36px\",\n            lineHeight: \"110%\",\n            color: \"#000000\",\n          }}\n        >\n          {item.title}\n        </Typography>\n        <Typography\n          style={{\n            fontFamily: \"Outfit\",\n            fontStyle: \"normal\",\n            fontWeight: \"600\",\n            fontSize: \"20px\",\n            color: \"#000000\",\n          }}\n        >\n          ${hasDiscount ? item.price - 10 : item.price}\n        </Typography>\n      </Box>\n\n      <Info>\n        <Icon>\n          <IconButton onClick={() => handleAddToCart(item)}>\n            <ShoppingCartOutlined />\n          </IconButton>\n        </Icon>\n        <Icon>\n          <IconButton onClick={() => navigate(`/Products/${item._id}`)}>\n            <SearchOutlined />\n          </IconButton>\n        </Icon>\n        <Icon>\n          <IconButton>\n            <FavoriteBorderOutlined />\n          </IconButton>\n        </Icon>\n      </Info>\n    </Container>\n  );\n};\n\nexport default Product;\n","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\pages\\Cart.jsx",["214","215","216","217","218","219","220","221","222","223","224","225","226"],"import { Add, Remove } from \"@material-ui/icons\";\nimport React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport Announcement from \"../components/Announcement\";\nimport Navbar from \"../components/Navbar\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport {\n  decrementQuantity,\n  incrementQuantity,\n  removeItem,\n} from \"../store/cart\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Grid, IconButton, Box } from \"@material-ui/core\";\nimport { DeleteOutline } from \"@material-ui/icons\";\nconst Container = styled.div``;\nconst Wrapper = styled.div`\n  padding: 20px;\n`;\nconst Title = styled.h1`\n  font-weight: 300;\n  text-align: center;\n`;\nconst Top = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 20px;\n`;\n\nconst TopButton = styled.button`\n  padding: 10px;\n  font-weight: 600;\n  cursor: pointer;\n  border: ${(props) => props.type === \"filled\" && \"non\"};\n  background-color: ${(props) =>\n    props.type === \"filled\" ? \"black\" : \"transparent\"};\n  color: ${(props) => props.type === \"filled\" && \"white\"};\n`;\n\nconst TopTexts = styled.div``;\nconst TopText = styled.span`\n  text-decoration: underline;\n  cursor: pointer;\n  margin: 0px 10px;\n`;\n\nconst Bottom = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Info = styled.div`\n  flex: 3;\n`;\n\nconst Product = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nconst ProductDetail = styled.div`\n  flex: 2;\n  display: flex;\n`;\nconst Image = styled.img`\n  width: 200px;\n`;\nconst Details = styled.div`\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n`;\nconst ProductName = styled.span``;\nconst ProductId = styled.span``;\nconst ProductType = styled.span``;\nconst PriceDetail = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst ProductAmountContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n`;\nconst ProductAmount = styled.div`\n  font-size: 24px;\n  margin: 5px;\n`;\nconst ProductPrice = styled.div`\n  font-size: 30px;\n  font-weight: 20;\n`;\n\nconst Hr = styled.hr`\n  background-color: #eee;\n  border: none;\n  height: 1px;\n`;\n\nconst Summary = styled.div`\n  flex: 1;\n  border: 0.5px solid lightgray;\n  border-radius: 10px;\n  padding: 20px;\n  height: 50vh;\n`;\n\nconst SummaryTitle = styled.h1`\n  font-weight: 200;\n`;\n\nconst SummaryItem = styled.div`\n  margin: 30px 0px;\n  display: flex;\n  justify-content: space-between;\n  font-weight: ${(props) => props.type === \"total\" && \"500\"};\n  font-size: ${(props) => props.type === \"total\" && \"24px\"};\n`;\n\nconst SummaryItemText = styled.span``;\n\nconst SummaryItemPrice = styled.span``;\n\nconst Button = styled.button`\n  width: 100%;\n  padding: 10px;\n  background-color: black;\n  color: white;\n  font-weight: 600;\n`;\n\nconst ButtonRemoveCart = styled.button`\n  padding: 15px;\n  border: 2px solid teal;\n  background-color: white;\n  cursor: pointer;\n  font-weight: 500;\n  &:hover {\n    background-color: #f8f4f4;\n  }\n`;\n\nconst Cart = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [title, setFoodname] = useState(\"\");\n  const [type, setTypename] = useState(\"\");\n  const [description, setDesc] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [img, setimg] = useState(\"\");\n  const [_id, setid] = useState(\"\");\n  const products = useSelector((state) => state.cart.cart);\n  const [foodlistData, setfoodlist] = useState([]);\n\n  useEffect(() => {\n    const price = products.reduce((accumulator, curValue) => {\n      return Number(accumulator) + Number(curValue.price * curValue.quantity);\n    }, 0);\n    setPrice(price);\n    setfoodlist(products);\n  }, [products]);\n\n  const deletefood = (id) => {\n    dispatch(removeItem(id));\n  };\n\n  const handleCheckout = () => {\n    const token = localStorage.getItem(\"token\");\n    if (token === \"\" || token === null) navigate(\"/signin\");\n\n    navigate(\"/Checkout\")\n  };\n\n  return (\n    <Container>\n      <Navbar />\n      <Announcement />\n      <Wrapper>\n        <Title>Your Bag</Title>\n        <Top>\n          <TopButton>Continute Shopping?</TopButton>\n          <TopTexts>\n            <TopText>Shopping Bag ({products.length})</TopText>\n            <TopText>Your Wishlist (0)</TopText>\n          </TopTexts>\n          <TopButton type=\"filled\" onClick={handleCheckout}>Checkout</TopButton>\n        </Top>\n        <Bottom>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={12} md={8}>\n              {foodlistData &&\n                foodlistData?.map((foodlist) => (\n                  <Grid\n                    item\n                    xs={12}\n                    sm={12}\n                    md={12}\n                  >\n                    <Info>\n                      <Product>\n                        <ProductDetail>\n                          <Image src={foodlist.img} />\n                          <Details>\n                            <ProductName>\n                              <b>Product: </b>\n                              {foodlist.title}\n                            </ProductName>\n                            <ProductType>\n                              <b>Type: </b>\n                              {foodlist.category}\n                            </ProductType>\n                          </Details>\n                          <PriceDetail>\n                            <ProductAmountContainer>\n                              <button\n                                onClick={() =>\n                                  dispatch(incrementQuantity(foodlist))\n                                }\n                              >\n                                <Add />\n                              </button>\n                              <ProductAmount>{foodlist.quantity}</ProductAmount>\n                              <button\n                                onClick={() =>\n                                  dispatch(decrementQuantity(foodlist._id))\n                                }\n                              >\n                                <Remove />\n                              </button>\n                            </ProductAmountContainer>\n                            <ProductPrice>$ {foodlist.price}</ProductPrice>\n                          </PriceDetail>\n\n                          <Box display=\"flex\" alignItems={\"center\"}>\n                            <IconButton\n                              aria-label=\"share\"\n                              onClick={() => deletefood(foodlist._id)}\n                            >\n                              <DeleteOutline />\n                            </IconButton>\n                          </Box>\n                        </ProductDetail>\n                      </Product>\n                    </Info>\n                  </Grid>\n                ))}\n            </Grid>\n\n            <Grid item xs={12} sm={12} md={4}>\n              <Hr></Hr>\n              <Summary>\n                <SummaryTitle>Order Summary</SummaryTitle>\n                <SummaryItem>\n                  <SummaryItemText>Subtotal</SummaryItemText>\n                  <SummaryItemPrice>{price}</SummaryItemPrice>\n                </SummaryItem>\n                <SummaryItem>\n                  <SummaryItemText>Tax (GST)</SummaryItemText>\n                  <SummaryItemPrice>13%</SummaryItemPrice>\n                </SummaryItem>\n                <SummaryItem>\n                  <SummaryItemText type=\"total\">Total</SummaryItemText>\n                  <SummaryItemPrice>{price + price * 0.13}</SummaryItemPrice>\n                </SummaryItem>\n                <Button onClick={handleCheckout}>Checkout Now</Button>\n              </Summary>\n            </Grid>\n          </Grid>\n        </Bottom>\n      </Wrapper>\n    </Container>\n  );\n};\nexport default Cart;\n","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\pages\\ProductList.jsx",[],"T:\\School\\Click\\Group_09\\Code\\frontend\\src\\pages\\ProductDetail.jsx",["227","228","229","230","231","232","233"],"import { useState, useEffect } from \"react\";\nimport { Add, Remove } from \"@material-ui/icons\";\nimport { useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { useGetSingleProductMutation } from \"../api/products\";\nimport Announcement from \"../components/Announcement\";\nimport Navbar from \"../components/Navbar\";\nimport { mobile } from \"../responsive\";\nimport { useDispatch } from \"react-redux\";\nimport { addToCart } from \"../store/cart\";\n\nconst Container = styled.div``;\n\nconst Wrapper = styled.div`\n  padding: 50px;\n  display: flex;\n  ${mobile({ padding: \"10px\", flexDirection: \"column\" })}\n`;\n\nconst ImgContainer = styled.div`\n  flex: 1;\n`;\n\nconst Image = styled.img`\n  width: 100%;\n  height: 90vh;\n  object-fit: cover;\n  ${mobile({ height: \"40vh\" })}\n`;\n\nconst InfoContainer = styled.div`\n  flex: 1;\n  padding: 0px 50px;\n  ${mobile({ padding: \"10px\" })}\n`;\n\nconst Title = styled.h1`\n  font-weight: 200;\n`;\n\nconst Desc = styled.p`\n  margin: 20px 0px;\n`;\n\nconst Price = styled.span`\n  font-weight: 100;\n  font-size: 40px;\n`;\n\nconst FilterContainer = styled.div`\n  width: 50%;\n  margin: 30px 0px;\n  display: flex;\n  justify-content: space-between;\n  ${mobile({ width: \"100%\" })}\n`;\n\nconst Filter = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst FilterTitle = styled.span`\n  font-size: 20px;\n  font-weight: 200;\n`;\n\nconst FilterColor = styled.div`\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  background-color: ${(props) => props.color};\n  margin: 0px 5px;\n  cursor: pointer;\n`;\n\nconst FilterSize = styled.select`\n  margin-left: 10px;\n  padding: 5px;\n`;\n\nconst FilterSizeOption = styled.option``;\n\nconst AddContainer = styled.div`\n  width: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  ${mobile({ width: \"100%\" })}\n`;\n\nconst AmountContainer = styled.div`\n  display: flex;\n  align-items: center;\n  font-weight: 700;\n`;\n\nconst Amount = styled.span`\n  width: 30px;\n  height: 30px;\n  border-radius: 10px;\n  border: 1px solid teal;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0px 5px;\n`;\n\nconst Button = styled.button`\n  padding: 15px;\n  border: 2px solid teal;\n  background-color: white;\n  cursor: pointer;\n  font-weight: 500;\n\n  &:hover {\n    background-color: #f8f4f4;\n  }\n`;\n\nconst Product = () => {\n  const params = useParams();\n  const dispatch = useDispatch();\n  const [count, setCount] = useState(1);\n  const [currentProduct, setCurrentProduct] = useState({});\n  const [getSingleProduct, { isLoading }] = useGetSingleProductMutation();\n  let hasDiscount = window.location.search.includes(\"discount\");\n  useEffect(() => {\n    getSingleProduct(params.id).then((res) => {\n      if (res.error) return alert(res.error.data);\n      setCurrentProduct(res.data);\n    });\n  }, []);\n\n  const handleAddToCart = () => {\n    dispatch(\n      addToCart({\n        ...currentProduct,\n        quantity: count,\n        price: hasDiscount\n          ? (currentProduct.price * (100 - currentProduct.discount)) / 100\n          : currentProduct.price,\n      })\n    );\n  };\n\n  return isLoading ? (\n    <p>Loading...</p>\n  ) : (\n    <Container>\n      <Navbar />\n      <Announcement />\n      <Wrapper>\n        <ImgContainer>\n          <Image src={currentProduct.img} />\n        </ImgContainer>\n        <InfoContainer>\n          <Title>{currentProduct.title}</Title>\n          <Desc>{currentProduct.description}</Desc>\n          <Price>\n            ${\" \"}\n            {hasDiscount\n              ? (currentProduct.price * (100 - currentProduct.discount)) / 100\n              : currentProduct.price}\n          </Price>\n          {/* <FilterContainer>\n            <Filter>\n              <FilterTitle>Color</FilterTitle>\n              <FilterColor color=\"black\" />\n              <FilterColor color=\"darkblue\" />\n              <FilterColor color=\"gray\" />\n            </Filter>\n            <Filter>\n              <FilterTitle>Size</FilterTitle>\n              <FilterSize>\n                <FilterSizeOption>XS</FilterSizeOption>\n                <FilterSizeOption>S</FilterSizeOption>\n                <FilterSizeOption>M</FilterSizeOption>\n                <FilterSizeOption>L</FilterSizeOption>\n                <FilterSizeOption>XL</FilterSizeOption>\n              </FilterSize>\n            </Filter>\n          </FilterContainer> */}\n          <AddContainer>\n            <AmountContainer>\n              <Remove onClick={() => setCount(count - 1)} />\n              <Amount>{count}</Amount>\n              <Add onClick={() => setCount(count + 1)} />\n            </AmountContainer>\n            <Button onClick={handleAddToCart}>ADD TO CART</Button>\n          </AddContainer>\n        </InfoContainer>\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default Product;\n","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\pages\\Register.jsx",["234","235","236"],"import React, { useState } from \"react\";\nimport Announcement from \"../components/Announcement\";\nimport Navbar from \"../components/Navbar\";\nimport styled from \"styled-components\";\nimport { useGetRegisteredMutation } from \"../api/authenticate\";\nimport { useNavigate } from \"react-router-dom\";\nimport swal from \"sweetalert\";\nconst Container = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: linear-gradient(\n      rgba(255, 255, 255, 0.5),\n      rgba(255, 255, 255, 0.5)\n    ),\n    url(\"https://images.pexels.com/photos/3183150/pexels-photo-3183150.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\")\n      center;\n  background-size: cover;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Wrapper = styled.div`\n  padding: 30px;\n  width: 40%;\n  background-color: white;\n  border-radius: 10px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  @media only screen and (max-width: 480px) {\n    width: 75%;\n  } ;\n`;\nconst Form = styled.form`\n  display: flex;\n  flex-wrap: wrap;\n`;\nconst Title = styled.h1`\n  font-size: 24px;\n  font-weight: 300;\n`;\n\nconst Agreement = styled.span`\n  font-size: 12px;\n  margin: 20px 0px;\n`;\nconst Input = styled.input`\n  flex: 1;\n  min-width: 40%;\n  margin: 20px 10px 0px 0px;\n  padding: 10px;\n`;\n\nconst Button = styled.div`\n  width: 40%;\n  border: none;\n  padding: 15px 20px;\n  background-color: teal;\n  color: white;\n  cursor: pointer;\n`;\n\nconst Register = () => {\n  const navigate = useNavigate();\n  const [userData, setUserData] = useState(null);\n  const [getRegister, { isLoading }] = useGetRegisteredMutation();\n  const handleSubmit = () => {\n    getRegister(userData).then((res) => {\n      if (res.error) return swal(\"Info!\", res.error.data, \"warning\");\n\n      swal(\"Info!\", \"Registered Successfully\", \"success\").then(() => {\n        navigate(\"/signin\");\n      });\n    });\n  };\n  return (\n    <Container>\n      <Wrapper>\n        <Title>CREATE AN ACCOUNT</Title>\n        <Form>\n          <Input\n            placeholder=\"first name\"\n            onChange={(e) =>\n              setUserData({ ...userData, firstName: e.target.value })\n            }\n          />\n          <Input\n            placeholder=\"last name\"\n            onChange={(e) =>\n              setUserData({ ...userData, lastName: e.target.value })\n            }\n          />\n          <Input\n            placeholder=\"username\"\n            onChange={(e) =>\n              setUserData({ ...userData, userName: e.target.value })\n            }\n          />\n          <Input\n            placeholder=\"email\"\n            onChange={(e) =>\n              setUserData({ ...userData, email: e.target.value })\n            }\n          />\n          <Input placeholder=\"password\" type=\"password\" />\n          <Input\n            placeholder=\"confirm password\"\n            type=\"password\"\n            onChange={(e) =>\n              setUserData({ ...userData, password: e.target.value })\n            }\n          />\n          <Agreement>\n            {\" \"}\n            By creating an account, I consent to the processing of my personal\n            data in accordance with the <b>PRIVACY POLICY</b>{\" \"}\n          </Agreement>\n          <Button onClick={handleSubmit}>CREATE</Button>\n        </Form>\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default Register;\n","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\pages\\CheckOutPage.jsx",["237","238","239"],"import { Button, Container, Grid, Modal, Paper, TextField, Typography, Card, CardContent, List, ListItem, ListItemAvatar, ListItemText, Divider } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { useSubmitOrderMutation } from '../api/orders';\r\nimport CreditCards from '../components/CreditCards/CreditCards';\r\nimport Navbar from '../components/Navbar';\r\nimport swal from \"sweetalert\";\r\nimport { clearCart } from '../store/cart';\r\n\r\nconst TopButton = styled.button`\r\n  padding: 10px;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  border: ${(props) => props.type === \"filled\" && \"non\"};\r\n  background-color: ${(props) =>\r\n        props.type === \"filled\" ? \"black\" : \"transparent\"};\r\n  color: ${(props) => props.type === \"filled\" && \"white\"};\r\n`;\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    form: {\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n    cardImage: {\r\n        width: \"80px\",\r\n        marginRight: \"10px\"\r\n    }\r\n}));\r\n\r\nconst CheckoutPage = () => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const user = JSON.parse(localStorage.getItem(\"user\"))\r\n    if (!user) {\r\n        alert(\"Please login first\");\r\n        navigate(\"/signin\")\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n\r\n    const products = useSelector((state) => state.cart.cart);\r\n    const [foodlistData, setfoodlist] = useState([]);\r\n    const [price, setPrice] = useState(0);\r\n    const [submitOrder, { isLoading }] = useSubmitOrderMutation();\r\n\r\n    const [openCardModal, setOpenCardModal] = useState(false);\r\n    const handleOpenCreditCardModal = () => {\r\n        setOpenCardModal(true);\r\n    };\r\n    const handleCloseCardModal = () => {\r\n        setOpenCardModal(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(\"products\", products)\r\n        const price = products.reduce((accumulator, curValue) => {\r\n            return Number(accumulator) + Number(curValue.price * curValue.quantity);\r\n        }, 0);\r\n        setPrice(price);\r\n        console.log(\"price\", price)\r\n        setfoodlist(products);\r\n    }, [products]);\r\n\r\n    // Define initial state for form fields\r\n    const [formFields, setFormFields] = useState({\r\n        fullName: '',\r\n        address: '',\r\n        city: '',\r\n        state: '',\r\n        zip: '',\r\n        country: '',\r\n        email: '',\r\n        phone: '',\r\n    });\r\n\r\n    // Define initial state for form field errors\r\n    const [formErrors, setFormErrors] = useState({\r\n        fullName: false,\r\n        address: false,\r\n        city: false,\r\n        state: false,\r\n        zip: false,\r\n        country: false,\r\n        email: false,\r\n    });\r\n\r\n    // Handle changes to form fields\r\n    const handleFormChange = (event) => {\r\n        setFormFields({\r\n            ...formFields,\r\n            [event.target.id]: event.target.value,\r\n        });\r\n        // Clear error message when user starts typing\r\n        setFormErrors({\r\n            ...formErrors,\r\n            [event.target.id]: false,\r\n        });\r\n    };\r\n\r\n    // Handle form submission\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        // Check for required fields\r\n        let errors = {\r\n            fullName: false,\r\n            address: false,\r\n            city: false,\r\n            state: false,\r\n            zip: false,\r\n            country: false,\r\n            email: false,\r\n        };\r\n        Object.keys(formFields).forEach((key) => {\r\n            if (!formFields[key]) {\r\n                errors[key] = true;\r\n            }\r\n        });\r\n        setFormErrors(errors);\r\n        // Submit form if no errors\r\n        if (Object.values(errors).every((value) => !value)) {\r\n            console.log('Form submitted');\r\n            // TODO: Send form data to server\r\n            console.log(formFields);\r\n            handleOpenCreditCardModal();\r\n        }\r\n    };\r\n\r\n    const onCardSubmit = (e) => {\r\n        console.log(e, \"onCardSubmit\")\r\n        submitOrder({\r\n            card: { ...e },\r\n            ...formFields,\r\n            items: foodlistData,\r\n            amount: price,\r\n            tax: 0.13,\r\n            totalAmount: +(price + price * 0.13).toFixed(2),\r\n            user: user._id\r\n        }).then((res) => {\r\n            console.log(res, \"api response 1243\");\r\n            localStorage.removeItem(\"cart\")\r\n            swal(\"Success!\", `The order has been placed`, \"success\").then(() => {\r\n                navigate(\"/Orders\");\r\n            });\r\n            dispatch(\r\n                clearCart()\r\n            );\r\n\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <Navbar />\r\n                <Container maxWidth=\"md\" className={classes.root}>\r\n                    <Typography variant=\"h4\" gutterBottom>\r\n                        Checkout\r\n                    </Typography>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12} md={6}>\r\n                            <Typography variant=\"h6\" gutterBottom>\r\n                                Shipping Address\r\n                            </Typography>\r\n                            <TextField\r\n                                required\r\n                                id=\"fullName\"\r\n                                label=\"Full Name\"\r\n                                fullWidth\r\n                                value={formFields.fullName}\r\n                                onChange={handleFormChange}\r\n                                error={formErrors.fullName}\r\n                                helperText={formErrors.fullName ? 'This field is required' : ''}\r\n                            />\r\n                            <TextField\r\n                                required\r\n                                id=\"address\"\r\n                                label=\"Address\"\r\n                                fullWidth\r\n                                value={formFields.address}\r\n                                onChange={handleFormChange}\r\n                                error={formErrors.address}\r\n                                helperText={formErrors.address ? 'This field is required' : ''}\r\n                            />\r\n                            <TextField\r\n                                required\r\n                                id=\"city\"\r\n                                label=\"City\"\r\n                                fullWidth\r\n                                value={formFields.city}\r\n                                onChange={handleFormChange}\r\n                                error={formErrors.city}\r\n                                helperText={formErrors.city ? 'This field is required' : ''}\r\n                            />\r\n                            <TextField\r\n                                required\r\n                                id=\"state\"\r\n                                label=\"State/Province/Region\"\r\n                                fullWidth\r\n                                value={formFields.state}\r\n                                onChange={handleFormChange}\r\n                                error={formErrors.state}\r\n                                helperText={formErrors.state ? 'This field is required' : ''}\r\n                            />\r\n                            <TextField\r\n                                required\r\n                                id=\"zip\"\r\n                                label=\"Zip / Postal code\"\r\n                                fullWidth\r\n                                value={formFields.zip}\r\n                                onChange={handleFormChange}\r\n                                error={formErrors.zip}\r\n                                helperText={formErrors.zip ? 'This field is required' : ''}\r\n                            />\r\n                            <TextField\r\n                                required\r\n                                id=\"country\"\r\n                                label=\"Country\"\r\n                                fullWidth\r\n                                value={formFields.country}\r\n                                onChange={handleFormChange}\r\n                                error={formErrors.country}\r\n                                helperText={formErrors.country ? 'This field is required' : ''}\r\n                            />\r\n                            <br /><br /><br />\r\n                            <Typography variant=\"h6\" gutterBottom>\r\n                                Contact\r\n                            </Typography>\r\n                            <TextField\r\n                                required\r\n                                id=\"email\"\r\n                                label=\"Email\"\r\n                                fullWidth\r\n                                value={formFields.email}\r\n                                onChange={handleFormChange}\r\n                                error={formErrors.email}\r\n                                helperText={formErrors.email ? 'This field is required' : ''}\r\n                            />\r\n                            <TextField\r\n                                id=\"phone\"\r\n                                label=\"Phone\"\r\n                                fullWidth\r\n                                value={formFields.phone}\r\n                                onChange={handleFormChange}\r\n                                error={formErrors.phone}\r\n                                helperText={formErrors.phone ? 'This field is required' : ''}\r\n                            />\r\n                            <TopButton type=\"filled\"\r\n                                variant=\"contained\"\r\n\r\n                                className={classes.button}\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                Place Order\r\n                            </TopButton>\r\n                            &nbsp;&nbsp;\r\n                            <TopButton\r\n                                variant=\"contained\"\r\n                                fullWidth\r\n                                className={classes.button}\r\n                                onClick={(e) => navigate(\"/Cart\")}\r\n                            >\r\n                                Back to Cart\r\n                            </TopButton>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <Card>\r\n                                <CardContent>\r\n                                    <Typography variant=\"h6\" gutterBottom>\r\n                                        Order Summary\r\n                                    </Typography>\r\n                                    <List sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\r\n                                        {foodlistData.map((product) => {\r\n                                            return (\r\n                                                <>\r\n                                                    <ListItem key={product._id}>\r\n                                                        <ListItemAvatar>\r\n                                                            <img className={classes.cardImage} src={product.img} alt=\"\" />\r\n                                                        </ListItemAvatar>\r\n                                                        <ListItemText primary={product.title} secondary={`${product.quantity} x ${product.price}$ = $${(product.quantity * product.price).toFixed(2)}`} />\r\n                                                    </ListItem>\r\n                                                </>\r\n                                            );\r\n                                        })\r\n                                        }\r\n                                    </List>\r\n                                    <Divider />\r\n                                    <br /><br />\r\n                                    <Typography variant=\"subtitle1\" gutterBottom>\r\n                                        Subtotal: {price}$\r\n                                    </Typography>\r\n                                    <Typography variant=\"subtitle1\" gutterBottom>\r\n                                        Shipping: Free\r\n                                    </Typography>\r\n                                    <Typography variant=\"subtitle1\" gutterBottom>\r\n                                        Tax (GST): {(price * 0.13).toFixed(2)}$\r\n                                    </Typography>\r\n                                    <Divider />\r\n                                    <br /><br />\r\n                                    <Typography Typography variant=\"h6\" gutterBottom>\r\n                                        Total: ${(price + price * 0.13).toFixed(2)}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </Container >\r\n            <Modal\r\n                open={openCardModal}\r\n                onClose={handleCloseCardModal}\r\n                className={classes.modal}\r\n                aria-labelledby=\"modal-title\"\r\n                aria-describedby=\"modal-description\"\r\n            >\r\n                <div className={classes.paper}>\r\n                    <CreditCards handleCloseCardModal={handleCloseCardModal} onCardSubmit={onCardSubmit} />\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CheckoutPage;\r\n","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\pages\\OrderPage.jsx",["240","241","242","243"],"import { Chip, CircularProgress, Container, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Navbar from '../components/Navbar';\r\n\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { useGetOrdersByUserMutation } from '../api/orders';\r\n\r\nimport Pagination from 'react-js-pagination';\r\nimport '../components/pagination.css';\r\n\r\nconst TopButton = styled.button`\r\n  padding: 10px;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  border: ${(props) => props.type === \"filled\" && \"non\"};\r\n  background-color: ${(props) =>\r\n        props.type === \"filled\" ? \"black\" : \"transparent\"};\r\n  color: ${(props) => props.type === \"filled\" && \"white\"};\r\n`;\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n    }\r\n}));\r\n\r\nconst OrdersPage = () => {\r\n\r\n    const navigate = useNavigate();\r\n    const classes = useStyles();\r\n    const [orders, setOrders] = useState([]);\r\n    const [getOrders, { isLoading }] = useGetOrdersByUserMutation();\r\n\r\n    const rows = [\r\n        { id: 1, name: 'John Doe', email: 'john.doe@example.com' },\r\n        { id: 2, name: 'Jane Smith', email: 'jane.smith@example.com' },\r\n        { id: 3, name: 'Bob Johnson', email: 'bob.johnson@example.com' },\r\n    ];\r\n\r\n\r\n    const user = JSON.parse(localStorage.getItem(\"user\"))\r\n\r\n    useEffect(() => {\r\n        getOrders({ userId: user._id }).then((res) => {\r\n            console.log(res, \"asdfasdfa\");\r\n            setOrders(res.data)\r\n        })\r\n    }, []);\r\n\r\n    const handlePageChange = (e) => {\r\n        getOrders({ userId: user._id, page: e }).then((res) => {\r\n            setOrders(res.data)\r\n        })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <Navbar />\r\n                <Container maxWidth=\"md\" className={classes.root}>\r\n                    <Typography variant=\"h4\" gutterBottom>\r\n                        My Orders\r\n                    </Typography>\r\n                    {isLoading &&\r\n                        <CircularProgress />\r\n                    }\r\n                    <TableContainer component={Paper}>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>ID</TableCell>\r\n                                    <TableCell>Items</TableCell>\r\n                                    <TableCell>Amount</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {orders && orders.orders && orders.orders.map((row) => (\r\n                                    <TableRow key={row._id}>\r\n                                        <TableCell>{row._id}</TableCell>\r\n                                        <TableCell>\r\n                                            {row.items.map((item) => (\r\n                                                <>\r\n                                                    <Chip label={`${item.quantity} x ${item.title}`} variant=\"outlined\" />\r\n                                                    &nbsp;\r\n                                                </>\r\n                                            ))\r\n                                            }\r\n                                        </TableCell>\r\n                                        <TableCell>${row.totalAmount}</TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n\r\n                    <Pagination\r\n                        activePage={+orders?.page || 1}\r\n                        itemsCountPerPage={+orders?.perPage || 10}\r\n                        totalItemsCount={orders?.total || 0}\r\n                        pageRangeDisplayed={5}\r\n                        onChange={handlePageChange}\r\n                    />\r\n                </Container>\r\n            </Container >\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrdersPage;\r\n","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\pages\\Sign-in.jsx",["244"],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useSignInMutation } from \"../api/authenticate\";\nimport {useNavigate} from \"react-router-dom\"\nimport { useEffect } from \"react\";\nconst Container = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: linear-gradient(\n      rgba(255, 255, 255, 0.5),\n      rgba(255, 255, 255, 0.5)\n    ),\n    url(\"https://i.imgur.com/lDAcE4w.jpg\") center;\n  background-size: cover;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nconst Wrapper = styled.div`\n  width: 25%;\n  padding: 20px;\n  background-color: white;\n`;\nconst Title = styled.h1`\n  font-size: 24px;\n  font-weight: 300;\n`;\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\nconst Input = styled.input`\n  flex: 1;\n  min-width: 40%;\n  margin: 10px 0;\n  padding: 10px;\n`;\nconst Button = styled.div`\n  width: 40%;\n  border: none;\n  padding: 15px 20px;\n  background-color: teal;\n  color: white;\n  cursor: pointer;\n  margin-bottom: 10px;\n`;\nconst Link = styled.div`\n  margin: 5px 0px;\n  font-size: 12px;\n  text-decoration: underline;\n  cursor: pointer;\n`;\n\nconst SignIn = () => {\n  const navigate = useNavigate()\n  const [userData, setUserData] = useState(null);\n  const [signInData, { isLoading }] = useSignInMutation();\n  const handleSignIn = () => {\n    signInData(userData).then((res) => {\n      if (res.error) return alert(res.error.data);\n      localStorage.setItem(\"token\", res.data.token);\n      localStorage.setItem(\"user\", JSON.stringify(res.data.user));\n      navigate(\"/\")\n    });\n  };\n\n  useEffect(()=>{\n    // localStorage.clear()\n  },[])\n\n  return (\n    <Container>\n      <Wrapper>\n        <Title>SIGN IN</Title>\n        <Form>\n          <Input\n            placeholder=\"Email\"\n            onChange={(e) =>\n              setUserData({ ...userData, email: e.target.value })\n            }\n          ></Input>\n          <Input\n            placeholder=\"Password\"\n            type=\"password\"\n            onChange={(e) =>\n              setUserData({ ...userData, password: e.target.value })\n            }\n          ></Input>\n          <Button onClick={handleSignIn}>LOGIN</Button>\n          <Link>\n            <a href=\"/forgot-password\">\n              FORGOT PASSWORD?</a></Link>\n          <Link>\n            <a href=\"./register\">CREATE A NEW ACCOUNT</a>\n          </Link>\n        </Form>\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default SignIn;\n","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\pages\\ForgotPassword.jsx",["245"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useForgotPasswordMutation } from \"../api/authenticate\";\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { useEffect } from \"react\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: linear-gradient(\r\n      rgba(255, 255, 255, 0.5),\r\n      rgba(255, 255, 255, 0.5)\r\n    ),\r\n    url(\"https://i.imgur.com/lDAcE4w.jpg\") center;\r\n  background-size: cover;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\nconst Wrapper = styled.div`\r\n  width: 25%;\r\n  padding: 20px;\r\n  background-color: white;\r\n`;\r\nconst Title = styled.h1`\r\n  font-size: 24px;\r\n  font-weight: 300;\r\n`;\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst Input = styled.input`\r\n  flex: 1;\r\n  min-width: 40%;\r\n  margin: 10px 0;\r\n  padding: 10px;\r\n`;\r\nconst Button = styled.div`\r\n  border: none;\r\n  padding: 15px 20px;\r\n  background-color: teal;\r\n  color: white;\r\n  cursor: pointer;\r\n  margin-bottom: 10px;\r\n  width: max-content;\r\n`;\r\nconst Link = styled.div`\r\n  margin: 5px 0px;\r\n  font-size: 12px;\r\n  text-decoration: underline;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ForgotPassword = () => {\r\n    const navigate = useNavigate()\r\n    const [userData, setUserData] = useState(null);\r\n    const [postForgotPasswordData, { isLoading }] = useForgotPasswordMutation();\r\n    const handleSubmit = () => {\r\n        postForgotPasswordData(userData).then((res) => {\r\n            if (res.error) return alert(res.error.data);\r\n            swal(\"Info!\", res.data.message, \"success\").then(() => {\r\n                navigate(\"/signin\");\r\n            });\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        localStorage.clear()\r\n    }, [])\r\n\r\n    return (\r\n        <Container>\r\n            <Wrapper>\r\n                <Title>Forgot Password?</Title>\r\n                <Form>\r\n                    <Input\r\n                        placeholder=\"Email\"\r\n                        onChange={(e) =>\r\n                            setUserData({ ...userData, email: e.target.value })\r\n                        }\r\n                    ></Input>\r\n                    <Button onClick={handleSubmit}>Submit</Button>\r\n\r\n                    <Link>\r\n                        <a href=\"./signin\">Login</a>\r\n                    </Link>\r\n                </Form>\r\n            </Wrapper>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\pages\\ResetPassword.jsx",["246","247","248"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useResetPasswordMutation, useSignInMutation } from \"../api/authenticate\";\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\"\r\nimport { useEffect } from \"react\";\r\nimport swal from \"sweetalert\";\r\n\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: linear-gradient(\r\n      rgba(255, 255, 255, 0.5),\r\n      rgba(255, 255, 255, 0.5)\r\n    ),\r\n    url(\"https://i.imgur.com/lDAcE4w.jpg\") center;\r\n  background-size: cover;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\nconst Wrapper = styled.div`\r\n  width: 25%;\r\n  padding: 20px;\r\n  background-color: white;\r\n`;\r\nconst Title = styled.h1`\r\n  font-size: 24px;\r\n  font-weight: 300;\r\n`;\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst Input = styled.input`\r\n  flex: 1;\r\n  min-width: 40%;\r\n  margin: 10px 0;\r\n  padding: 10px;\r\n`;\r\nconst Button = styled.div`\r\n  width: 40%;\r\n  border: none;\r\n  padding: 15px 20px;\r\n  background-color: teal;\r\n  color: white;\r\n  cursor: pointer;\r\n  margin-bottom: 10px;\r\n  width: max-content;\r\n`;\r\nconst Link = styled.div`\r\n  margin: 5px 0px;\r\n  font-size: 12px;\r\n  text-decoration: underline;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ResetPassword = () => {\r\n    const navigate = useNavigate()\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n    const [userData, setUserData] = useState({\r\n        email: searchParams.get('email'),\r\n        token: searchParams.get(\"token\")\r\n    });\r\n    const [resetPasswordData, { isLoading }] = useResetPasswordMutation();\r\n\r\n    const handleSubmit = () => {\r\n        resetPasswordData(userData).then((res) => {\r\n            if (res.error) return alert(res.error.data);\r\n            swal(\"Info!\", `The password is rest`, \"success\").then(() => {\r\n                navigate(\"/signin\");\r\n            });\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        localStorage.clear()\r\n    }, [])\r\n\r\n    return (\r\n        <Container>\r\n            <Wrapper>\r\n                <Title>Reset Password</Title>\r\n                <Form>\r\n                    <Input\r\n                        type='password'\r\n                        placeholder=\"New Password\"\r\n                        onChange={(e) =>\r\n                            setUserData({ ...userData, password: e.target.value })\r\n                        }\r\n                    ></Input>\r\n                    <Button onClick={handleSubmit}>Reset</Button>\r\n                    <Link>\r\n                        <a href=\"/forgot-password\">\r\n                            FORGOT PASSWORD?</a></Link>\r\n                    <Link>\r\n                        <a href=\"./register\">CREATE A NEW ACCOUNT</a>\r\n                    </Link>\r\n                </Form>\r\n            </Wrapper>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default ResetPassword;\r\n","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\components\\Admin\\Layout.jsx",[],"T:\\School\\Click\\Group_09\\Code\\frontend\\src\\components\\Admin\\Products.jsx",["249","250","251","252","253","254","255","256","257","258","259"],"import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useAddProductMutation, useDeleteProductMutation, useGetProductsMutation, useUpdateProductMutation } from \"../../api/products\";\r\nimport Pagination from 'react-js-pagination';\r\nimport '../pagination.css';\r\n\r\n\r\nimport {\r\n  Backdrop,\r\n  Fade, makeStyles, Modal, TablePagination, TextField, Typography\r\n} from \"@material-ui/core\";\r\nimport swal from \"sweetalert\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n`;\r\n\r\n\r\nconst TdCenter = styled.td`\r\n  text-align: center\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 100px\r\n`;\r\n\r\nconst TopButton = styled.button`\r\n  padding: 10px;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  border: ${(props) => props.type === \"filled\" && \"non\"};\r\n  background-color: ${(props) =>\r\n    props.type === \"filled\" ? \"black\" : \"transparent\"};\r\n  color: ${(props) => props.type === \"filled\" && \"white\"};\r\n`;\r\n\r\n\r\nconst AdminProducts = ({ hasDiscount }) => {\r\n  const [queryCategory, setQueryCategory] = useState(\"all\");\r\n  const [queryPrice, setQueryPrice] = useState(\"asc\");\r\n  const [productsData, setProductsData] = useState();\r\n  const [formTitle, setFormTitle] = useState('Add Product');\r\n  const [data, { isLoading }] = useGetProductsMutation();\r\n  const [addProduct, { isAdding }] = useAddProductMutation();\r\n  const [updateProduct, { isUpdating }] = useUpdateProductMutation();\r\n  const [deleteProduct, { isDeleting }] = useDeleteProductMutation();\r\n\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpen = (event, product) => {\r\n    if (product) {\r\n      setFormData({\r\n        _id: product._id,\r\n        title: product.title,\r\n        img: product.img,\r\n        description: product.description,\r\n        category: product.category,\r\n        price: product.price,\r\n        discount: product.discount,\r\n        currentQuantity: product.currentQuantity,\r\n        thresholdQuantity: product.thresholdQuantity,\r\n      })\r\n    } else {\r\n      setFormData({\r\n        _id: '',\r\n        title: '',\r\n        img: '',\r\n        description: '',\r\n        category: '',\r\n        price: 0,\r\n        discount: 0,\r\n        currentQuantity: 0,\r\n        thresholdQuantity: 0\r\n      })\r\n    }\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDelete = (e, product, i) => {\r\n    deleteProduct(product._id).then(response => {\r\n      if (response.error) {\r\n        swal({\r\n          title: response.error.data,\r\n          icon: 'error'\r\n        })\r\n      } else {\r\n        swal({\r\n          title: `Product has been deleted`,\r\n          icon: 'success'\r\n        })\r\n        if (productsData?.products) {\r\n          let index = productsData.products.findIndex(p => p._id == mFormData._id);\r\n          let ps = productsData.products.slice();\r\n          ps.splice(i, 1);\r\n          setProductsData({ ...productsData, products: [...ps] })\r\n        }\r\n      }\r\n    })\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const [mFormData, setFormData] = useState({\r\n    _id: '',\r\n    title: '',\r\n    img: '',\r\n    description: '',\r\n    category: '',\r\n    price: 0,\r\n    discount: 0,\r\n    currentQuantity: 0,\r\n    thresholdQuantity: 0\r\n  });\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    // Do something with mFormData, like send it to an API endpoint\r\n    console.log(mFormData);\r\n    if (mFormData._id) {\r\n      updateProduct(mFormData).then(product => {\r\n        if (product.error) {\r\n          swal({\r\n            title: product.error.data,\r\n            icon: 'error'\r\n          })\r\n        } else {\r\n          swal({\r\n            title: `Product has been updated`,\r\n            icon: 'success'\r\n          })\r\n          if (productsData?.products) {\r\n            let index = productsData.products.findIndex(p => p._id == mFormData._id);\r\n            if (index > -1) {\r\n              let ps = productsData.products.slice();\r\n              ps[index] = product.data;\r\n              setProductsData({ ...productsData, products: [...ps] })\r\n            }\r\n          }\r\n          handleClose();\r\n        }\r\n      })\r\n    } else {\r\n      addProduct(mFormData).then(product => {\r\n        if (product.error) {\r\n          swal({\r\n            title: product.error.data,\r\n            icon: 'error'\r\n          })\r\n        } else {\r\n          swal({\r\n            title: `Product has been added`,\r\n            icon: 'success'\r\n          })\r\n          if (productsData?.products) {\r\n            let ps = productsData.products.slice();\r\n            ps.push(product.data)\r\n            setProductsData({ ...productsData, products: [...ps] })\r\n          }\r\n          handleClose();\r\n        }\r\n      })\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    console.log(mFormData);\r\n    const { name, value } = event.target;\r\n    if (typeof value == \"string\")\r\n      setFormData({ ...mFormData, [name]: value });\r\n\r\n  };\r\n  const handlePageChange = (e) => {\r\n    data(`/admin/list?page=${e}`).then((res) => {\r\n      if (res.error) return alert(res.error.data);\r\n      setProductsData(res.data);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    data(`/admin/list`).then((res) => {\r\n      if (res.error) return alert(res.error.data);\r\n      setProductsData(res.data);\r\n    });\r\n  }, [queryCategory, queryPrice]);\r\n  return (\r\n    <>\r\n      <Container>\r\n        <TopButton onClick={(e) => handleOpen(e, null)} type='filled' variant=\"contained\" color=\"primary\" >\r\n          Add new Product\r\n        </TopButton>\r\n        {isLoading ? (\r\n          <p>Loading....</p>\r\n        ) : productsData?.products?.length === 0 ? (\r\n          <p>No Products</p>\r\n        ) : (\r\n          <>\r\n            <table style={{ width: \"100%\", marginTop: \"20px\" }} className=\"table-striped\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Sr</th>\r\n                  <th>Image</th>\r\n                  <th>Product</th>\r\n                  <th>Price</th>\r\n                  <th>Current Quantity</th>\r\n                  <th>Threshold Quantity</th>\r\n                  <th>Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {productsData?.products.map((product, i) => {\r\n                  return (\r\n                    <tr>\r\n                      <TdCenter>{1 + i}</TdCenter>\r\n                      <TdCenter>\r\n                        <Img src={product.img} alt=\"\" />\r\n                      </TdCenter>\r\n                      <TdCenter>{product.title}</TdCenter>\r\n                      <TdCenter>${product.price.toFixed(1)}</TdCenter>\r\n                      <TdCenter>\r\n                        <>\r\n                          {product.currentQuantity || 0}\r\n                          {(product.currentQuantity || 0) <= (product.thresholdQuantity || 0) &&\r\n                            <>\r\n                            <br /><br />\r\n                            <span className=\"badge-danger\">Getting out of stock</span>\r\n                            </>\r\n                          }\r\n                        </>\r\n                      </TdCenter>\r\n                      <TdCenter>{product.thresholdQuantity || 0}</TdCenter>\r\n                      <TdCenter>\r\n                        <TopButton onClick={(e) => handleOpen(e, product)} variant=\"contained\" color=\"primary\">\r\n                          Edit\r\n                        </TopButton>\r\n                        &nbsp;\r\n                        <TopButton onClick={(e) => handleDelete(e, product, i)} type='filled' variant=\"contained\" color=\"primary\" >\r\n                          Delete\r\n                        </TopButton>\r\n                      </TdCenter>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </>\r\n        )}\r\n        {productsData &&\r\n          <>\r\n            <Pagination\r\n              activePage={+productsData?.page || 1}\r\n              itemsCountPerPage={+productsData?.perPage || 10}\r\n              totalItemsCount={productsData?.total || 0}\r\n              pageRangeDisplayed={5}\r\n              onChange={handlePageChange}\r\n            />\r\n          </>\r\n        }\r\n      </Container>\r\n\r\n      <div>\r\n        <Modal\r\n          className={classes.modal}\r\n          open={open}\r\n          onClose={handleClose}\r\n          closeAfterTransition\r\n          BackdropComponent={Backdrop}\r\n          BackdropProps={{\r\n            timeout: 500,\r\n          }}\r\n        >\r\n          <Fade in={open}>\r\n            <div className={classes.paper}>\r\n              <Typography variant=\"h5\" gutterBottom>\r\n                {formTitle}\r\n              </Typography>\r\n              <form onSubmit={handleSubmit}>\r\n                <div>\r\n                  <TextField\r\n\r\n                    id=\"title\"\r\n                    label=\"Title\"\r\n                    name=\"title\"\r\n                    value={mFormData.title}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <TextField\r\n\r\n                    id=\"description\"\r\n                    label=\"Description\"\r\n                    name=\"description\"\r\n                    value={mFormData.description}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <TextField\r\n\r\n                    id=\"img\"\r\n                    label=\"Img\"\r\n                    name=\"img\"\r\n                    value={mFormData.img}\r\n                    placeholder=\"Image path/url\"\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <TextField\r\n\r\n                    id=\"category\"\r\n                    label=\"Category\"\r\n                    name=\"category\"\r\n                    value={mFormData.category}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <TextField\r\n\r\n                    id=\"price\"\r\n                    label=\"Price\"\r\n                    name=\"price\"\r\n                    value={mFormData.price}\r\n                    onChange={handleInputChange}\r\n                    type=\"number\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <TextField\r\n\r\n                    id=\"discount\"\r\n                    label=\"Discount\"\r\n                    name=\"discount\"\r\n                    value={mFormData.discount}\r\n                    onChange={handleInputChange}\r\n                    type=\"number\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <TextField\r\n\r\n                    id=\"currentQuantity\"\r\n                    label=\"CurrentQuantity\"\r\n                    name=\"currentQuantity\"\r\n                    value={mFormData.currentQuantity}\r\n                    onChange={handleInputChange}\r\n                    type=\"number\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <TextField\r\n\r\n                    id=\"thresholdQuantity\"\r\n                    label=\"ThresholdQuantity\"\r\n                    name=\"thresholdQuantity\"\r\n                    value={mFormData.thresholdQuantity}\r\n                    onChange={handleInputChange}\r\n                    type=\"number\"\r\n                  />\r\n                </div>\r\n\r\n                <br />\r\n                <TopButton variant=\"contained\" color=\"primary\" type=\"filled\">\r\n                  {mFormData._id ? 'Update' : 'Submit'}\r\n                </TopButton>\r\n              </form>\r\n            </div>\r\n          </Fade>\r\n        </Modal>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminProducts;\r\n","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\store\\cart.js",[],"T:\\School\\Click\\Group_09\\Code\\frontend\\src\\responsive.js",[],"T:\\School\\Click\\Group_09\\Code\\frontend\\src\\api\\orders.js",[],"T:\\School\\Click\\Group_09\\Code\\frontend\\src\\api\\products.js",[],"T:\\School\\Click\\Group_09\\Code\\frontend\\src\\api\\authenticate.js",[],"T:\\School\\Click\\Group_09\\Code\\frontend\\src\\components\\Announcement.jsx",["260"],"import React from 'react'\nimport styled from \"styled-components\"\n\nconst Container = styled.div`\n        background-color: teal;\n        color: white;\n        align-items: center;\n        justify-content: center;\n        display: flex;\n        font-size: 14px;\n        font-weight: 500;\n        height: 30px;\n        `\n\n const Announcement = () => {\n  return (\n    <Container>\n      <marquee direction=\"right\">\n        Exclusive Deal! Free Shipping on Orders Over $50\n        </marquee>\n        </Container>\n        \n  )\n}\n\nexport default Announcement","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\components\\NavbarOut.jsx",["261"],"import React, { useState, useEffect } from \"react\";\r\nimport { Badge } from \"@material-ui/core\";\r\nimport { Search, ShoppingCartOutlined } from \"@material-ui/icons\";\r\nimport styled from \"styled-components\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nconst Container = styled.div`\r\n  height: 60px;\r\n`;\r\nconst Wrapper = styled.div`\r\n  padding: 10px 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst Left = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Language = styled.span`\r\n  font-size: 14px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst SearchContainer = styled.div`\r\n  border: 0.5px solid lightgray;\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 25px;\r\n  padding: 5px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  border: none;\r\n`;\r\n\r\nconst Center = styled.div`\r\n  flex: 1;\r\n  text-align: center;\r\n`;\r\n\r\nconst Logo = styled.h1`\r\n  font-weight: bold;\r\n`;\r\n\r\nconst Right = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nconst MenuItem = styled.div`\r\n  font-size: 14px;\r\n  cursor: pointer;\r\n  margin-left: 25px;\r\n`;\r\n\r\nconst Navbar = () => {\r\n  const navigate = useNavigate();\r\n  const [userName, setUserName] = useState(\"\");\r\n  const count = useSelector((state) => state.cart.cart);\r\n  useEffect(() => {\r\n    const data = JSON.parse(localStorage.getItem(\"user\"));\r\n    if (data !== null) setUserName(data.userName);\r\n  }, []);\r\n  return (\r\n    <Container>\r\n      <Wrapper>\r\n        <Left>\r\n          <Language>EN</Language>\r\n          <SearchContainer>\r\n            <Input />\r\n            <Search style={{ color: \"gray\", fontSize: 16 }} />\r\n          </SearchContainer>\r\n        </Left>\r\n        <Center>\r\n          <Logo>\r\n          {\" \"}\r\n          </Logo>{\" \"}\r\n          <MenuItem onClick={() => navigate(\"/Home\")} tyle={{ textDecoration: \"none \" }}> CLICK</MenuItem>\r\n        </Center>\r\n        <Right>\r\n          <MenuItem onClick={() => navigate(\"/Products\")}> PRODUCTS</MenuItem>\r\n          <MenuItem onClick={() => navigate(\"/Deals\")}> DEALS</MenuItem>\r\n          <MenuItem onClick={() => navigate(\"/signin\")}>{\"SIGN IN\"}</MenuItem>\r\n          <MenuItem onClick={() => navigate(\"/Cart\")}>\r\n            <Badge badgeContent={count.length} color=\"primary\">\r\n              <ShoppingCartOutlined />\r\n            </Badge>\r\n          </MenuItem>\r\n        </Right>\r\n      </Wrapper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\components\\Products.jsx",["262","263","264","265"],"import styled from \"styled-components\";\nimport Product from \"./Product\";\nimport Cart from \"./Product\";\nimport React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport { useGetProductsMutation } from \"../api/products\";\nimport ProductCard from \"./Cards\";\nimport { Grid } from \"@material-ui/core\";\n\nconst Container = styled.div`\n  padding: 20px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n\nconst FilterContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Filter = styled.div`\n  margin: 20px;\n`;\n\nconst FilterText = styled.span`\n  font-size: 20px;\n  font-weight: 600;\n  margin-right: 20px;\n`;\n\nconst Select = styled.select`\n  padding: 10px;\n  margin-right: 20px;\n`;\nconst Option = styled.option``;\nconst Products = ({ hasDiscount }) => {\n  const [queryCategory, setQueryCategory] = useState(\"all\");\n  const [queryPrice, setQueryPrice] = useState(\"asc\");\n  const [products, setProducts] = useState([]);\n  const [data, { isLoading }] = useGetProductsMutation();\n\n  useEffect(() => {\n    data(`?category=${queryCategory}&&price=${queryPrice}`).then((res) => {\n      if (res.error) return alert(res.error.data);\n      setProducts(res.data);\n    });\n  }, [queryCategory, queryPrice]);\n  return (\n    <>\n      <FilterContainer>\n        <Filter>\n          <FilterText>Filter Products:</FilterText>\n          <Select onChange={(e) => setQueryCategory(e.target.value)}>\n            <Option disabled selected value=\"all\">\n              Categories\n            </Option>\n            <Option value=\"drink\">Drink</Option>\n            <Option value=\"dairy\">Dairy</Option>\n            <Option value=\"meat\">Meat</Option>\n            <Option value=\"wheat\">Wheat</Option>\n            <Option value=\"snacks\">Snacks</Option>\n            <Option value=\"veggies\">Veggies</Option>\n          </Select>\n        </Filter>\n        <Filter>\n          <FilterText>Sort Products:</FilterText>\n          <Select onChange={(e) => setQueryPrice(e.target.value)}>\n            <Option selected>Newest</Option>\n            <Option value=\"asc\">Price (asc)</Option>\n            <Option value=\"desc\">Price (desc)</Option>\n          </Select>\n        </Filter>\n      </FilterContainer>\n      <Container>\n        {isLoading ? (\n          <p>Loading....</p>\n        ) : products.length === 0 ? (\n          <p>No Products</p>\n        ) : (\n          <Grid container spacing={2}>\n            {products.map((item) => (\n              <Grid xs={12} sm={12} md={4} key={item._id} style={{marginTop:10}}>\n                <ProductCard item={item} hasDiscount={hasDiscount} />\n              </Grid>\n            ))}\n          </Grid>\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport default Products;\n","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\components\\Categories.jsx",[],"T:\\School\\Click\\Group_09\\Code\\frontend\\src\\components\\Navbar.jsx",[],"T:\\School\\Click\\Group_09\\Code\\frontend\\src\\config\\index.js",[],"T:\\School\\Click\\Group_09\\Code\\frontend\\src\\components\\Slider.jsx",[],"T:\\School\\Click\\Group_09\\Code\\frontend\\src\\components\\CreditCards\\CreditCards.jsx",["266"],"import React, { useState } from \"react\";\r\nimport Cards from \"react-credit-cards\";\r\nimport \"react-credit-cards/es/styles-compiled.css\";\r\nimport { TextField, Button, Grid } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TopButton = styled.button`\r\n  padding: 10px;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  border: ${(props) => props.type === \"filled\" && \"non\"};\r\n  background-color: ${(props) =>\r\n    props.type === \"filled\" ? \"black\" : \"transparent\"};\r\n  color: ${(props) => props.type === \"filled\" && \"white\"};\r\n`;\r\n\r\n\r\nconst CreditCards = (props) => {\r\n\r\n  const [number, setNumber] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [expiry, setExpiry] = useState(\"\");\r\n  const [cvc, setCvc] = useState(\"\");\r\n  const [focus, setFocus] = useState(\"\");\r\n\r\n  // Define initial state for form field errors\r\n  const [formErrors, setFormErrors] = useState({\r\n    number: false,\r\n    name: false,\r\n    expiry: false,\r\n    cvc: false,\r\n  });\r\n\r\n  // Handle changes to form fields\r\n  const handleFormChange = (event) => {\r\n    // Clear error message when user starts typing\r\n    setFormErrors({\r\n      ...formErrors,\r\n      [event.target.name]: false,\r\n    });\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    // Check for required fields\r\n    let errors = {\r\n      number: !number,\r\n      name: !name,\r\n      expiry: !expiry,\r\n      cvc: !cvc\r\n    };    \r\n    setFormErrors(errors);\r\n    // Submit form if no errors\r\n    if (Object.values(errors).every((value) => !value)) {\r\n      props.onCardSubmit({ number, name, expiry, cvc });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={1} justify=\"center\" direction=\"column\">\r\n      <Grid item>\r\n        <Cards\r\n          number={number}\r\n          name={name}\r\n          expiry={expiry}\r\n          cvc={cvc}\r\n          focused={focus}\r\n        />\r\n      </Grid>\r\n\r\n\r\n      <Grid item>\r\n        <TextField\r\n          label=\"Card Number\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          onChange={(e) => { setNumber(e.target.value); handleFormChange(e) }}\r\n          onFocus={(e) => setFocus(e.target.name)}\r\n          name=\"number\"\r\n          error={formErrors.number}\r\n          helperText={formErrors.number ? 'This field is required' : ''}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item>\r\n        <TextField\r\n          label=\"Cardholder Name\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          onChange={(e) => { setName(e.target.value); handleFormChange(e) }}\r\n          onFocus={(e) => setFocus(e.target.name)}\r\n          name=\"name\"\r\n          error={formErrors.name}\r\n          helperText={formErrors.name ? 'This field is required' : ''}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item>\r\n        <TextField\r\n          label=\"Expiry Date\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          onChange={(e) => { setExpiry(e.target.value); handleFormChange(e) }}\r\n          onFocus={(e) => setFocus(e.target.name)}\r\n          name=\"expiry\"\r\n          error={formErrors.expiry}\r\n          helperText={formErrors.expiry ? 'This field is required' : ''}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item>\r\n        <TextField\r\n          label=\"CVC\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          onChange={(e) => { setCvc(e.target.value); handleFormChange(e) }}\r\n          onFocus={(e) => setFocus(e.target.name)}\r\n          name=\"cvc\"\r\n          error={formErrors.cvc}\r\n          helperText={formErrors.cvc ? 'This field is required' : ''}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid container spacing={1} justify=\"center\" direction=\"column\">\r\n        <Grid item>\r\n          <TopButton type='filled' variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\r\n            Pay Now\r\n          </TopButton>\r\n          &nbsp;\r\n          <TopButton variant=\"contained\" color=\"primary\" onClick={props.handleCloseCardModal}>\r\n            Cancel\r\n          </TopButton>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CreditCards;\r\n","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\data.js",[],"T:\\School\\Click\\Group_09\\Code\\frontend\\src\\components\\Cards.jsx",["267","268","269","270"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport { IconButton, Box, Typography, Snackbar, Slide } from \"@material-ui/core\";\nimport { red } from \"@material-ui/core/colors\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  FavoriteBorderOutlined,\n  SearchOutlined,\n  ShoppingCartOutlined,\n} from \"@material-ui/icons\";\nimport { addToCart } from \"../store/cart\";\nimport swal from \"sweetalert\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\", // 16:9\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nexport default function RecipeReviewCard({ item, hasDiscount }) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n\n  console.log(user);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const handleAddToCart = (item) => {\n    if (item.currentQuantity > 0) {\n      dispatch(\n        addToCart({\n          ...item,\n          price: hasDiscount\n            ? (item.price * (100 - item.discount)) / 100\n            : item.price,\n        })\n      );\n    } else {\n      swal({ title: 'Out of stock!', icon: 'error' })\n    }\n  };\n  return (\n    <>\n      <Card className={classes.root}>\n        <CardMedia\n          className={classes.media}\n          image={item.img}\n          title=\"Paella dish\"\n        />\n        <CardContent>\n          <Typography variant=\"h4\" color=\"textSecondary\" component=\"p\">\n            {item.title}\n          </Typography>\n          <Box display=\"flex\" alignItems={\"baseline\"}>\n            <Typography variant=\"h5\" color=\"textSecondary\" component=\"p\">\n              ${\" \"}\n              {hasDiscount\n                ? (item.price * (100 - item.discount)) / 100\n                : item.price}\n            </Typography>\n            {hasDiscount && (\n              <Typography\n                variant=\"body1\"\n                color=\"textSecondary\"\n                component=\"p\"\n                style={{ textDecoration: \"line-through\", marginLeft: 10 }}\n              >\n                ${item.price}\n              </Typography>\n            )}\n          </Box>\n        </CardContent>\n        <CardActions disableSpacing>\n          <IconButton\n            aria-label=\"add to shopping cart\"\n            onClick={() => handleAddToCart(item)}\n          >\n            <ShoppingCartOutlined />\n          </IconButton>\n          <IconButton\n            aria-label=\"share\"\n            onClick={() =>\n              navigate(\n                `/Products/${item._id} ${hasDiscount ? \"?discount=true\" : \"\"}`\n              )\n            }\n          >\n            <SearchOutlined />\n          </IconButton>\n          <IconButton aria-label=\"share\">\n            <FavoriteBorderOutlined />\n          </IconButton>\n          {/* <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n          <ExpandMoreIcon />\n        </IconButton> */}\n        </CardActions>\n      </Card>\n    </>\n\n  );\n}\n","T:\\School\\Click\\Group_09\\Code\\frontend\\src\\components\\CategoryItem.jsx",[],{"ruleId":"271","replacedBy":"272"},{"ruleId":"273","replacedBy":"274"},{"ruleId":"275","severity":1,"message":"276","line":3,"column":8,"nodeType":"277","messageId":"278","endLine":3,"endColumn":14},{"ruleId":"275","severity":1,"message":"279","line":4,"column":8,"nodeType":"277","messageId":"278","endLine":4,"endColumn":13},{"ruleId":"280","severity":1,"message":"281","line":7,"column":1,"nodeType":"282","endLine":17,"endColumn":2},{"ruleId":"275","severity":1,"message":"283","line":1,"column":8,"nodeType":"277","messageId":"278","endLine":1,"endColumn":15},{"ruleId":"275","severity":1,"message":"284","line":4,"column":8,"nodeType":"277","messageId":"278","endLine":4,"endColumn":19},{"ruleId":"275","severity":1,"message":"285","line":1,"column":10,"nodeType":"277","messageId":"278","endLine":1,"endColumn":18},{"ruleId":"275","severity":1,"message":"286","line":3,"column":20,"nodeType":"277","messageId":"278","endLine":3,"endColumn":31},{"ruleId":"275","severity":1,"message":"287","line":1,"column":17,"nodeType":"277","messageId":"278","endLine":1,"endColumn":26},{"ruleId":"275","severity":1,"message":"288","line":3,"column":8,"nodeType":"277","messageId":"278","endLine":3,"endColumn":14},{"ruleId":"275","severity":1,"message":"289","line":7,"column":8,"nodeType":"277","messageId":"278","endLine":7,"endColumn":16},{"ruleId":"275","severity":1,"message":"290","line":4,"column":8,"nodeType":"277","messageId":"278","endLine":4,"endColumn":14},{"ruleId":"275","severity":1,"message":"291","line":5,"column":8,"nodeType":"277","messageId":"278","endLine":5,"endColumn":18},{"ruleId":"275","severity":1,"message":"289","line":6,"column":8,"nodeType":"277","messageId":"278","endLine":6,"endColumn":16},{"ruleId":"275","severity":1,"message":"287","line":1,"column":17,"nodeType":"277","messageId":"278","endLine":1,"endColumn":26},{"ruleId":"275","severity":1,"message":"289","line":6,"column":8,"nodeType":"277","messageId":"278","endLine":6,"endColumn":16},{"ruleId":"275","severity":1,"message":"287","line":1,"column":27,"nodeType":"277","messageId":"278","endLine":1,"endColumn":36},{"ruleId":"275","severity":1,"message":"292","line":8,"column":8,"nodeType":"277","messageId":"278","endLine":8,"endColumn":13},{"ruleId":"275","severity":1,"message":"293","line":76,"column":10,"nodeType":"277","messageId":"278","endLine":76,"endColumn":15},{"ruleId":"275","severity":1,"message":"294","line":76,"column":17,"nodeType":"277","messageId":"278","endLine":76,"endColumn":28},{"ruleId":"275","severity":1,"message":"295","line":77,"column":10,"nodeType":"277","messageId":"278","endLine":77,"endColumn":14},{"ruleId":"275","severity":1,"message":"296","line":77,"column":16,"nodeType":"277","messageId":"278","endLine":77,"endColumn":27},{"ruleId":"275","severity":1,"message":"297","line":78,"column":10,"nodeType":"277","messageId":"278","endLine":78,"endColumn":21},{"ruleId":"275","severity":1,"message":"298","line":78,"column":23,"nodeType":"277","messageId":"278","endLine":78,"endColumn":30},{"ruleId":"275","severity":1,"message":"299","line":79,"column":10,"nodeType":"277","messageId":"278","endLine":79,"endColumn":15},{"ruleId":"275","severity":1,"message":"300","line":79,"column":17,"nodeType":"277","messageId":"278","endLine":79,"endColumn":25},{"ruleId":"275","severity":1,"message":"301","line":80,"column":10,"nodeType":"277","messageId":"278","endLine":80,"endColumn":13},{"ruleId":"275","severity":1,"message":"302","line":80,"column":15,"nodeType":"277","messageId":"278","endLine":80,"endColumn":21},{"ruleId":"275","severity":1,"message":"303","line":81,"column":10,"nodeType":"277","messageId":"278","endLine":81,"endColumn":13},{"ruleId":"275","severity":1,"message":"304","line":81,"column":15,"nodeType":"277","messageId":"278","endLine":81,"endColumn":20},{"ruleId":"275","severity":1,"message":"305","line":83,"column":10,"nodeType":"277","messageId":"278","endLine":83,"endColumn":18},{"ruleId":"275","severity":1,"message":"306","line":83,"column":20,"nodeType":"277","messageId":"278","endLine":83,"endColumn":31},{"ruleId":"275","severity":1,"message":"292","line":3,"column":8,"nodeType":"277","messageId":"278","endLine":3,"endColumn":13},{"ruleId":"275","severity":1,"message":"307","line":76,"column":7,"nodeType":"277","messageId":"278","endLine":76,"endColumn":16},{"ruleId":"275","severity":1,"message":"308","line":138,"column":7,"nodeType":"277","messageId":"278","endLine":138,"endColumn":23},{"ruleId":"275","severity":1,"message":"293","line":152,"column":10,"nodeType":"277","messageId":"278","endLine":152,"endColumn":15},{"ruleId":"275","severity":1,"message":"294","line":152,"column":17,"nodeType":"277","messageId":"278","endLine":152,"endColumn":28},{"ruleId":"275","severity":1,"message":"295","line":153,"column":10,"nodeType":"277","messageId":"278","endLine":153,"endColumn":14},{"ruleId":"275","severity":1,"message":"296","line":153,"column":16,"nodeType":"277","messageId":"278","endLine":153,"endColumn":27},{"ruleId":"275","severity":1,"message":"297","line":154,"column":10,"nodeType":"277","messageId":"278","endLine":154,"endColumn":21},{"ruleId":"275","severity":1,"message":"298","line":154,"column":23,"nodeType":"277","messageId":"278","endLine":154,"endColumn":30},{"ruleId":"275","severity":1,"message":"301","line":156,"column":10,"nodeType":"277","messageId":"278","endLine":156,"endColumn":13},{"ruleId":"275","severity":1,"message":"302","line":156,"column":15,"nodeType":"277","messageId":"278","endLine":156,"endColumn":21},{"ruleId":"275","severity":1,"message":"303","line":157,"column":10,"nodeType":"277","messageId":"278","endLine":157,"endColumn":13},{"ruleId":"275","severity":1,"message":"304","line":157,"column":15,"nodeType":"277","messageId":"278","endLine":157,"endColumn":20},{"ruleId":"275","severity":1,"message":"309","line":50,"column":7,"nodeType":"277","messageId":"278","endLine":50,"endColumn":22},{"ruleId":"275","severity":1,"message":"310","line":58,"column":7,"nodeType":"277","messageId":"278","endLine":58,"endColumn":13},{"ruleId":"275","severity":1,"message":"311","line":63,"column":7,"nodeType":"277","messageId":"278","endLine":63,"endColumn":18},{"ruleId":"275","severity":1,"message":"312","line":68,"column":7,"nodeType":"277","messageId":"278","endLine":68,"endColumn":18},{"ruleId":"275","severity":1,"message":"313","line":77,"column":7,"nodeType":"277","messageId":"278","endLine":77,"endColumn":17},{"ruleId":"275","severity":1,"message":"314","line":82,"column":7,"nodeType":"277","messageId":"278","endLine":82,"endColumn":23},{"ruleId":"315","severity":1,"message":"316","line":133,"column":6,"nodeType":"317","endLine":133,"endColumn":8,"suggestions":"318"},{"ruleId":"275","severity":1,"message":"319","line":2,"column":8,"nodeType":"277","messageId":"278","endLine":2,"endColumn":20},{"ruleId":"275","severity":1,"message":"288","line":3,"column":8,"nodeType":"277","messageId":"278","endLine":3,"endColumn":14},{"ruleId":"275","severity":1,"message":"320","line":65,"column":25,"nodeType":"277","messageId":"278","endLine":65,"endColumn":34},{"ruleId":"275","severity":1,"message":"321","line":1,"column":10,"nodeType":"277","messageId":"278","endLine":1,"endColumn":16},{"ruleId":"275","severity":1,"message":"322","line":1,"column":42,"nodeType":"277","messageId":"278","endLine":1,"endColumn":47},{"ruleId":"275","severity":1,"message":"320","line":70,"column":27,"nodeType":"277","messageId":"278","endLine":70,"endColumn":36},{"ruleId":"275","severity":1,"message":"323","line":14,"column":7,"nodeType":"277","messageId":"278","endLine":14,"endColumn":16},{"ruleId":"275","severity":1,"message":"324","line":34,"column":11,"nodeType":"277","messageId":"278","endLine":34,"endColumn":19},{"ruleId":"275","severity":1,"message":"325","line":39,"column":11,"nodeType":"277","messageId":"278","endLine":39,"endColumn":15},{"ruleId":"315","severity":1,"message":"326","line":53,"column":8,"nodeType":"317","endLine":53,"endColumn":10,"suggestions":"327"},{"ruleId":"275","severity":1,"message":"320","line":57,"column":24,"nodeType":"277","messageId":"278","endLine":57,"endColumn":33},{"ruleId":"275","severity":1,"message":"320","line":59,"column":38,"nodeType":"277","messageId":"278","endLine":59,"endColumn":47},{"ruleId":"275","severity":1,"message":"328","line":3,"column":36,"nodeType":"277","messageId":"278","endLine":3,"endColumn":53},{"ruleId":"275","severity":1,"message":"329","line":60,"column":26,"nodeType":"277","messageId":"278","endLine":60,"endColumn":41},{"ruleId":"275","severity":1,"message":"320","line":65,"column":33,"nodeType":"277","messageId":"278","endLine":65,"endColumn":42},{"ruleId":"275","severity":1,"message":"330","line":10,"column":28,"nodeType":"277","messageId":"278","endLine":10,"endColumn":43},{"ruleId":"275","severity":1,"message":"331","line":54,"column":25,"nodeType":"277","messageId":"278","endLine":54,"endColumn":41},{"ruleId":"275","severity":1,"message":"332","line":55,"column":22,"nodeType":"277","messageId":"278","endLine":55,"endColumn":35},{"ruleId":"275","severity":1,"message":"333","line":57,"column":21,"nodeType":"277","messageId":"278","endLine":57,"endColumn":33},{"ruleId":"275","severity":1,"message":"334","line":59,"column":24,"nodeType":"277","messageId":"278","endLine":59,"endColumn":32},{"ruleId":"275","severity":1,"message":"335","line":60,"column":27,"nodeType":"277","messageId":"278","endLine":60,"endColumn":37},{"ruleId":"275","severity":1,"message":"336","line":61,"column":27,"nodeType":"277","messageId":"278","endLine":61,"endColumn":37},{"ruleId":"275","severity":1,"message":"337","line":108,"column":15,"nodeType":"277","messageId":"278","endLine":108,"endColumn":20},{"ruleId":"338","severity":1,"message":"339","line":108,"column":66,"nodeType":"340","messageId":"341","endLine":108,"endColumn":68},{"ruleId":"338","severity":1,"message":"339","line":149,"column":68,"nodeType":"340","messageId":"341","endLine":149,"endColumn":70},{"ruleId":"315","severity":1,"message":"342","line":201,"column":6,"nodeType":"317","endLine":201,"endColumn":33,"suggestions":"343"},{"ruleId":"344","severity":1,"message":"345","line":18,"column":7,"nodeType":"346","endLine":18,"endColumn":34},{"ruleId":"275","severity":1,"message":"347","line":64,"column":10,"nodeType":"277","messageId":"278","endLine":64,"endColumn":18},{"ruleId":"275","severity":1,"message":"283","line":2,"column":8,"nodeType":"277","messageId":"278","endLine":2,"endColumn":15},{"ruleId":"275","severity":1,"message":"348","line":3,"column":8,"nodeType":"277","messageId":"278","endLine":3,"endColumn":12},{"ruleId":"275","severity":1,"message":"292","line":5,"column":8,"nodeType":"277","messageId":"278","endLine":5,"endColumn":13},{"ruleId":"315","severity":1,"message":"342","line":48,"column":6,"nodeType":"317","endLine":48,"endColumn":33,"suggestions":"349"},{"ruleId":"275","severity":1,"message":"321","line":4,"column":21,"nodeType":"277","messageId":"278","endLine":4,"endColumn":27},{"ruleId":"275","severity":1,"message":"350","line":3,"column":8,"nodeType":"277","messageId":"278","endLine":3,"endColumn":12},{"ruleId":"275","severity":1,"message":"351","line":8,"column":39,"nodeType":"277","messageId":"278","endLine":8,"endColumn":47},{"ruleId":"275","severity":1,"message":"352","line":8,"column":49,"nodeType":"277","messageId":"278","endLine":8,"endColumn":54},{"ruleId":"275","severity":1,"message":"353","line":53,"column":9,"nodeType":"277","messageId":"278","endLine":53,"endColumn":26},"no-native-reassign",["354"],"no-negated-in-lhs",["355"],"no-unused-vars","'logger' is defined but never used.","Identifier","unusedVar","'toast' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'Product' is defined but never used.","'Coming_soon' is defined but never used.","'BASE_URL' is defined but never used.","'useLocation' is defined but never used.","'useEffect' is defined but never used.","'Navbar' is defined but never used.","'Products' is defined but never used.","'Slider' is defined but never used.","'Categories' is defined but never used.","'Axios' is defined but never used.","'title' is assigned a value but never used.","'setFoodname' is assigned a value but never used.","'type' is assigned a value but never used.","'setTypename' is assigned a value but never used.","'description' is assigned a value but never used.","'setDesc' is assigned a value but never used.","'price' is assigned a value but never used.","'setPrice' is assigned a value but never used.","'img' is assigned a value but never used.","'setimg' is assigned a value but never used.","'_id' is assigned a value but never used.","'setid' is assigned a value but never used.","'foodlist' is assigned a value but never used.","'setfoodlist' is assigned a value but never used.","'ProductId' is assigned a value but never used.","'ButtonRemoveCart' is assigned a value but never used.","'FilterContainer' is assigned a value but never used.","'Filter' is assigned a value but never used.","'FilterTitle' is assigned a value but never used.","'FilterColor' is assigned a value but never used.","'FilterSize' is assigned a value but never used.","'FilterSizeOption' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getSingleProduct' and 'params.id'. Either include them or remove the dependency array.","ArrayExpression",["356"],"'Announcement' is defined but never used.","'isLoading' is assigned a value but never used.","'Button' is defined but never used.","'Paper' is defined but never used.","'TopButton' is assigned a value but never used.","'navigate' is assigned a value but never used.","'rows' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getOrders' and 'user._id'. Either include them or remove the dependency array.",["357"],"'useSignInMutation' is defined but never used.","'setSearchParams' is assigned a value but never used.","'TablePagination' is defined but never used.","'setQueryCategory' is assigned a value but never used.","'setQueryPrice' is assigned a value but never used.","'setFormTitle' is assigned a value but never used.","'isAdding' is assigned a value but never used.","'isUpdating' is assigned a value but never used.","'isDeleting' is assigned a value but never used.","'index' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["358"],"jsx-a11y/no-distracting-elements","Do not use <marquee> elements as they can create visual accessibility issues and are deprecated.","JSXOpeningElement","'userName' is assigned a value but never used.","'Cart' is defined but never used.",["359"],"'clsx' is defined but never used.","'Snackbar' is defined but never used.","'Slide' is defined but never used.","'handleExpandClick' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"360","fix":"361"},{"desc":"362","fix":"363"},{"desc":"364","fix":"365"},{"desc":"364","fix":"366"},"Update the dependencies array to be: [getSingleProduct, params.id]",{"range":"367","text":"368"},"Update the dependencies array to be: [getOrders, user._id]",{"range":"369","text":"370"},"Update the dependencies array to be: [data, queryCategory, queryPrice]",{"range":"371","text":"372"},{"range":"373","text":"372"},[2793,2795],"[getSingleProduct, params.id]",[1763,1765],"[getOrders, user._id]",[5615,5642],"[data, queryCategory, queryPrice]",[1230,1257]]