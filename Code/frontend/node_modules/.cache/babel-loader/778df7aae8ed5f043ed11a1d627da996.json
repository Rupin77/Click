{"ast":null,"code":"var _jsxFileName = \"T:\\\\School\\\\Click\\\\Group_09\\\\Code\\\\frontend\\\\src\\\\components\\\\CreditCards\\\\CreditCards.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Cards from \"react-credit-cards\";\nimport \"react-credit-cards/es/styles-compiled.css\";\nimport { TextField, Button, Grid } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TopButton = styled.button`\n  padding: 10px;\n  font-weight: 600;\n  cursor: pointer;\n  border: ${props => props.type === \"filled\" && \"non\"};\n  background-color: ${props => props.type === \"filled\" ? \"black\" : \"transparent\"};\n  color: ${props => props.type === \"filled\" && \"white\"};\n`;\n_c = TopButton;\n\nconst CreditCards = props => {\n  _s();\n\n  const [number, setNumber] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [expiry, setExpiry] = useState(\"\");\n  const [cvc, setCvc] = useState(\"\");\n  const [focus, setFocus] = useState(\"\"); // Define initial state for form field errors\n\n  const [formErrors, setFormErrors] = useState({\n    number: false,\n    name: false,\n    expiry: false,\n    cvc: false\n  }); // Handle changes to form fields\n\n  const handleFormChange = event => {\n    // Clear error message when user starts typing\n    setFormErrors({ ...formErrors,\n      [event.target.name]: false\n    });\n  }; // Handle form submission\n\n\n  const handleSubmit = event => {\n    event.preventDefault(); // Check for required fields\n\n    let errors = {\n      number: !number,\n      name: !name,\n      expiry: !expiry,\n      cvc: !cvc\n    };\n    setFormErrors(errors); // Submit form if no errors\n\n    if (Object.values(errors).every(value => !value)) {\n      props.onCardSubmit({\n        number,\n        name,\n        expiry,\n        cvc\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 1,\n    justify: \"center\",\n    direction: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(Cards, {\n        number: number,\n        name: name,\n        expiry: expiry,\n        cvc: cvc,\n        focused: focus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Card Number\",\n        variant: \"outlined\",\n        fullWidth: true,\n        onChange: e => {\n          setNumber(e.target.value);\n          handleFormChange(e);\n        },\n        onFocus: e => setFocus(e.target.name),\n        name: \"number\",\n        error: formErrors.number,\n        helperText: formErrors.number ? 'This field is required' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Cardholder Name\",\n        variant: \"outlined\",\n        fullWidth: true,\n        onChange: e => {\n          setName(e.target.value);\n          handleFormChange(e);\n        },\n        onFocus: e => setFocus(e.target.name),\n        name: \"name\",\n        error: formErrors.name,\n        helperText: formErrors.name ? 'This field is required' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Expiry Date\",\n        variant: \"outlined\",\n        fullWidth: true,\n        onChange: e => {\n          setExpiry(e.target.value);\n          handleFormChange(e);\n        },\n        onFocus: e => setFocus(e.target.name),\n        name: \"expiry\",\n        error: formErrors.expiry,\n        helperText: formErrors.expiry ? 'This field is required' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"CVC\",\n        variant: \"outlined\",\n        fullWidth: true,\n        onChange: e => {\n          setCvc(e.target.value);\n          handleFormChange(e);\n        },\n        onFocus: e => setFocus(e.target.name),\n        name: \"cvc\",\n        error: formErrors.cvc,\n        helperText: formErrors.cvc ? 'This field is required' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 1,\n      justify: \"center\",\n      direction: \"column\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: [/*#__PURE__*/_jsxDEV(TopButton, {\n          type: \"filled\",\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleSubmit,\n          children: \"Pay Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(TopButton, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: props.handleCloseCardModal,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreditCards, \"umnCdkv8rFUyQfCnFwFzy4+o6mo=\");\n\n_c2 = CreditCards;\nexport default CreditCards;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TopButton\");\n$RefreshReg$(_c2, \"CreditCards\");","map":{"version":3,"sources":["T:/School/Click/Group_09/Code/frontend/src/components/CreditCards/CreditCards.jsx"],"names":["React","useState","Cards","TextField","Button","Grid","styled","TopButton","button","props","type","CreditCards","number","setNumber","name","setName","expiry","setExpiry","cvc","setCvc","focus","setFocus","formErrors","setFormErrors","handleFormChange","event","target","handleSubmit","preventDefault","errors","Object","values","every","value","onCardSubmit","e","handleCloseCardModal"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Cards from \"react-credit-cards\";\r\nimport \"react-credit-cards/es/styles-compiled.css\";\r\nimport { TextField, Button, Grid } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TopButton = styled.button`\r\n  padding: 10px;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  border: ${(props) => props.type === \"filled\" && \"non\"};\r\n  background-color: ${(props) =>\r\n    props.type === \"filled\" ? \"black\" : \"transparent\"};\r\n  color: ${(props) => props.type === \"filled\" && \"white\"};\r\n`;\r\n\r\n\r\nconst CreditCards = (props) => {\r\n\r\n  const [number, setNumber] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [expiry, setExpiry] = useState(\"\");\r\n  const [cvc, setCvc] = useState(\"\");\r\n  const [focus, setFocus] = useState(\"\");\r\n\r\n  // Define initial state for form field errors\r\n  const [formErrors, setFormErrors] = useState({\r\n    number: false,\r\n    name: false,\r\n    expiry: false,\r\n    cvc: false,\r\n  });\r\n\r\n  // Handle changes to form fields\r\n  const handleFormChange = (event) => {\r\n    // Clear error message when user starts typing\r\n    setFormErrors({\r\n      ...formErrors,\r\n      [event.target.name]: false,\r\n    });\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    // Check for required fields\r\n    let errors = {\r\n      number: !number,\r\n      name: !name,\r\n      expiry: !expiry,\r\n      cvc: !cvc\r\n    };    \r\n    setFormErrors(errors);\r\n    // Submit form if no errors\r\n    if (Object.values(errors).every((value) => !value)) {\r\n      props.onCardSubmit({ number, name, expiry, cvc });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={1} justify=\"center\" direction=\"column\">\r\n      <Grid item>\r\n        <Cards\r\n          number={number}\r\n          name={name}\r\n          expiry={expiry}\r\n          cvc={cvc}\r\n          focused={focus}\r\n        />\r\n      </Grid>\r\n\r\n\r\n      <Grid item>\r\n        <TextField\r\n          label=\"Card Number\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          onChange={(e) => { setNumber(e.target.value); handleFormChange(e) }}\r\n          onFocus={(e) => setFocus(e.target.name)}\r\n          name=\"number\"\r\n          error={formErrors.number}\r\n          helperText={formErrors.number ? 'This field is required' : ''}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item>\r\n        <TextField\r\n          label=\"Cardholder Name\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          onChange={(e) => { setName(e.target.value); handleFormChange(e) }}\r\n          onFocus={(e) => setFocus(e.target.name)}\r\n          name=\"name\"\r\n          error={formErrors.name}\r\n          helperText={formErrors.name ? 'This field is required' : ''}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item>\r\n        <TextField\r\n          label=\"Expiry Date\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          onChange={(e) => { setExpiry(e.target.value); handleFormChange(e) }}\r\n          onFocus={(e) => setFocus(e.target.name)}\r\n          name=\"expiry\"\r\n          error={formErrors.expiry}\r\n          helperText={formErrors.expiry ? 'This field is required' : ''}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item>\r\n        <TextField\r\n          label=\"CVC\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          onChange={(e) => { setCvc(e.target.value); handleFormChange(e) }}\r\n          onFocus={(e) => setFocus(e.target.name)}\r\n          name=\"cvc\"\r\n          error={formErrors.cvc}\r\n          helperText={formErrors.cvc ? 'This field is required' : ''}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid container spacing={1} justify=\"center\" direction=\"column\">\r\n        <Grid item>\r\n          <TopButton type='filled' variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\r\n            Pay Now\r\n          </TopButton>\r\n          &nbsp;\r\n          <TopButton variant=\"contained\" color=\"primary\" onClick={props.handleCloseCardModal}>\r\n            Cancel\r\n          </TopButton>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CreditCards;\r\n"]},"metadata":{},"sourceType":"module"}