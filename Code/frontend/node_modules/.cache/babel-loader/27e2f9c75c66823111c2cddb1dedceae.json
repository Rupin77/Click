{"ast":null,"code":"var _jsxFileName = \"T:\\\\School\\\\Click\\\\Group_09\\\\Code\\\\frontend\\\\src\\\\pages\\\\CheckOutPage.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Container, Grid, Modal, Paper, TextField, Typography, Card, CardContent, List, ListItem, ListItemAvatar, ListItemText, Divider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { useSubmitOrderMutation } from '../api/orders';\nimport CreditCards from '../components/CreditCards/CreditCards';\nimport Navbar from '../components/Navbar';\nimport swal from \"sweetalert\";\nimport { clearCart } from '../store/cart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TopButton = styled.button`\n  padding: 10px;\n  font-weight: 600;\n  cursor: pointer;\n  border: ${props => props.type === \"filled\" && \"non\"};\n  background-color: ${props => props.type === \"filled\" ? \"black\" : \"transparent\"};\n  color: ${props => props.type === \"filled\" && \"white\"};\n`;\n_c = TopButton;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2)\n  },\n  form: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2)\n  },\n  button: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2)\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  cardImage: {\n    width: \"80px\",\n    marginRight: \"10px\"\n  }\n}));\n\nconst CheckoutPage = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n\n  if (!user) {\n    alert(\"Please login first\");\n    navigate(\"/signin\");\n  }\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const products = useSelector(state => state.cart.cart);\n  const [foodlistData, setfoodlist] = useState([]);\n  const [price, setPrice] = useState(0);\n  const [submitOrder, {\n    isLoading\n  }] = useSubmitOrderMutation();\n  const [openCardModal, setOpenCardModal] = useState(false);\n\n  const handleOpenCreditCardModal = () => {\n    setOpenCardModal(true);\n  };\n\n  const handleCloseCardModal = () => {\n    setOpenCardModal(false);\n  };\n\n  useEffect(() => {\n    console.log(\"products\", products);\n    const price = products.reduce((accumulator, curValue) => {\n      return Number(accumulator) + Number(curValue.price * curValue.quantity);\n    }, 0);\n    setPrice(price);\n    console.log(\"price\", price);\n    setfoodlist(products);\n  }, [products]); // Define initial state for form fields\n\n  const [formFields, setFormFields] = useState({\n    fullName: '',\n    address: '',\n    city: '',\n    state: '',\n    zip: '',\n    country: '',\n    email: '',\n    phone: ''\n  }); // Define initial state for form field errors\n\n  const [formErrors, setFormErrors] = useState({\n    fullName: false,\n    address: false,\n    city: false,\n    state: false,\n    zip: false,\n    country: false,\n    email: false\n  }); // Handle changes to form fields\n\n  const handleFormChange = event => {\n    setFormFields({ ...formFields,\n      [event.target.id]: event.target.value\n    }); // Clear error message when user starts typing\n\n    setFormErrors({ ...formErrors,\n      [event.target.id]: false\n    });\n  }; // Handle form submission\n\n\n  const handleSubmit = event => {\n    event.preventDefault(); // Check for required fields\n\n    let errors = {\n      fullName: false,\n      address: false,\n      city: false,\n      state: false,\n      zip: false,\n      country: false,\n      email: false\n    };\n    Object.keys(formFields).forEach(key => {\n      if (!formFields[key]) {\n        errors[key] = true;\n      }\n    });\n    setFormErrors(errors); // Submit form if no errors\n\n    if (Object.values(errors).every(value => !value)) {\n      console.log('Form submitted'); // TODO: Send form data to server\n\n      console.log(formFields);\n      handleOpenCreditCardModal();\n    }\n  };\n\n  const onCardSubmit = e => {\n    console.log(e, \"onCardSubmit\");\n    submitOrder({\n      card: { ...e\n      },\n      ...formFields,\n      items: foodlistData,\n      amount: price,\n      tax: 0.13,\n      totalAmount: +(price + price * 0.13).toFixed(2),\n      user: user._id\n    }).then(res => {\n      console.log(res, \"api response 1243\");\n      localStorage.removeItem(\"cart\");\n      swal(\"Success!\", `The order has been placed`, \"success\").then(() => {\n        navigate(\"/Orders\");\n      });\n      dispatch(clearCart());\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"md\",\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          children: \"Checkout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Shipping Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              id: \"fullName\",\n              label: \"Full Name\",\n              fullWidth: true,\n              value: formFields.fullName,\n              onChange: handleFormChange,\n              error: formErrors.fullName,\n              helperText: formErrors.fullName ? 'This field is required' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              id: \"address\",\n              label: \"Address\",\n              fullWidth: true,\n              value: formFields.address,\n              onChange: handleFormChange,\n              error: formErrors.address,\n              helperText: formErrors.address ? 'This field is required' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              id: \"city\",\n              label: \"City\",\n              fullWidth: true,\n              value: formFields.city,\n              onChange: handleFormChange,\n              error: formErrors.city,\n              helperText: formErrors.city ? 'This field is required' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              id: \"state\",\n              label: \"State/Province/Region\",\n              fullWidth: true,\n              value: formFields.state,\n              onChange: handleFormChange,\n              error: formErrors.state,\n              helperText: formErrors.state ? 'This field is required' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              id: \"zip\",\n              label: \"Zip / Postal code\",\n              fullWidth: true,\n              value: formFields.zip,\n              onChange: handleFormChange,\n              error: formErrors.zip,\n              helperText: formErrors.zip ? 'This field is required' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              id: \"country\",\n              label: \"Country\",\n              fullWidth: true,\n              value: formFields.country,\n              onChange: handleFormChange,\n              error: formErrors.country,\n              helperText: formErrors.country ? 'This field is required' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 35\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Contact\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              id: \"email\",\n              label: \"Email\",\n              fullWidth: true,\n              value: formFields.email,\n              onChange: handleFormChange,\n              error: formErrors.email,\n              helperText: formErrors.email ? 'This field is required' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"phone\",\n              label: \"Phone\",\n              fullWidth: true,\n              value: formFields.phone,\n              onChange: handleFormChange,\n              error: formErrors.phone,\n              helperText: formErrors.phone ? 'This field is required' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TopButton, {\n              type: \"filled\",\n              variant: \"contained\",\n              className: classes.button,\n              onClick: handleSubmit,\n              children: \"Place Order\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 29\n            }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(TopButton, {\n              variant: \"contained\",\n              fullWidth: true,\n              className: classes.button,\n              onClick: e => navigate(\"/Cart\"),\n              children: \"Back to Cart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  gutterBottom: true,\n                  children: \"Order Summary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(List, {\n                  sx: {\n                    width: '100%',\n                    maxWidth: 360,\n                    bgcolor: 'background.paper'\n                  },\n                  children: foodlistData.map(product => {\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: /*#__PURE__*/_jsxDEV(ListItem, {\n                        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                          children: /*#__PURE__*/_jsxDEV(\"img\", {\n                            className: classes.cardImage,\n                            src: product.img,\n                            alt: \"\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 304,\n                            columnNumber: 61\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 303,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                          primary: product.title,\n                          secondary: `${product.quantity} x ${product.price}$ = $${(product.quantity * product.price).toFixed(2)}`\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 306,\n                          columnNumber: 57\n                        }, this)]\n                      }, product._id, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 302,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 43\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  gutterBottom: true,\n                  children: [\"Subtotal: \", price, \"$\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  gutterBottom: true,\n                  children: \"Shipping: Free\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  gutterBottom: true,\n                  children: [\"Tax (GST): \", (price * 0.13).toFixed(2), \"$\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 43\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  Typography: true,\n                  variant: \"h6\",\n                  gutterBottom: true,\n                  children: [\"Total: $\", (price + price * 0.13).toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: openCardModal,\n      onClose: handleCloseCardModal,\n      className: classes.modal,\n      \"aria-labelledby\": \"modal-title\",\n      \"aria-describedby\": \"modal-description\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.paper,\n        children: /*#__PURE__*/_jsxDEV(CreditCards, {\n          handleCloseCardModal: handleCloseCardModal,\n          onCardSubmit: onCardSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CheckoutPage, \"0pJCTyO3LljedEtMvMGzsy11X8Q=\", false, function () {\n  return [useNavigate, useDispatch, useStyles, useSelector, useSubmitOrderMutation];\n});\n\n_c2 = CheckoutPage;\nexport default CheckoutPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TopButton\");\n$RefreshReg$(_c2, \"CheckoutPage\");","map":{"version":3,"sources":["T:/School/Click/Group_09/Code/frontend/src/pages/CheckOutPage.jsx"],"names":["Button","Container","Grid","Modal","Paper","TextField","Typography","Card","CardContent","List","ListItem","ListItemAvatar","ListItemText","Divider","makeStyles","React","useEffect","useState","useDispatch","useSelector","useNavigate","styled","useSubmitOrderMutation","CreditCards","Navbar","swal","clearCart","TopButton","button","props","type","useStyles","theme","root","marginTop","spacing","marginBottom","form","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","cardImage","width","marginRight","CheckoutPage","navigate","user","JSON","parse","localStorage","getItem","alert","dispatch","classes","products","state","cart","foodlistData","setfoodlist","price","setPrice","submitOrder","isLoading","openCardModal","setOpenCardModal","handleOpenCreditCardModal","handleCloseCardModal","console","log","reduce","accumulator","curValue","Number","quantity","formFields","setFormFields","fullName","address","city","zip","country","email","phone","formErrors","setFormErrors","handleFormChange","event","target","id","value","handleSubmit","preventDefault","errors","Object","keys","forEach","key","values","every","onCardSubmit","e","card","items","amount","tax","totalAmount","toFixed","_id","then","res","removeItem","maxWidth","bgcolor","map","product","img","title"],"mappings":"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","sourcesContent":["import { Button, Container, Grid, Modal, Paper, TextField, Typography, Card, CardContent, List, ListItem, ListItemAvatar, ListItemText, Divider } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { useSubmitOrderMutation } from '../api/orders';\r\nimport CreditCards from '../components/CreditCards/CreditCards';\r\nimport Navbar from '../components/Navbar';\r\nimport swal from \"sweetalert\";\r\nimport { clearCart } from '../store/cart';\r\n\r\nconst TopButton = styled.button`\r\n  padding: 10px;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  border: ${(props) => props.type === \"filled\" && \"non\"};\r\n  background-color: ${(props) =>\r\n        props.type === \"filled\" ? \"black\" : \"transparent\"};\r\n  color: ${(props) => props.type === \"filled\" && \"white\"};\r\n`;\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    form: {\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n    cardImage: {\r\n        width: \"80px\",\r\n        marginRight: \"10px\"\r\n    }\r\n}));\r\n\r\nconst CheckoutPage = () => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const user = JSON.parse(localStorage.getItem(\"user\"))\r\n    if (!user) {\r\n        alert(\"Please login first\");\r\n        navigate(\"/signin\")\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n\r\n    const products = useSelector((state) => state.cart.cart);\r\n    const [foodlistData, setfoodlist] = useState([]);\r\n    const [price, setPrice] = useState(0);\r\n    const [submitOrder, { isLoading }] = useSubmitOrderMutation();\r\n\r\n    const [openCardModal, setOpenCardModal] = useState(false);\r\n    const handleOpenCreditCardModal = () => {\r\n        setOpenCardModal(true);\r\n    };\r\n    const handleCloseCardModal = () => {\r\n        setOpenCardModal(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(\"products\", products)\r\n        const price = products.reduce((accumulator, curValue) => {\r\n            return Number(accumulator) + Number(curValue.price * curValue.quantity);\r\n        }, 0);\r\n        setPrice(price);\r\n        console.log(\"price\", price)\r\n        setfoodlist(products);\r\n    }, [products]);\r\n\r\n    // Define initial state for form fields\r\n    const [formFields, setFormFields] = useState({\r\n        fullName: '',\r\n        address: '',\r\n        city: '',\r\n        state: '',\r\n        zip: '',\r\n        country: '',\r\n        email: '',\r\n        phone: '',\r\n    });\r\n\r\n    // Define initial state for form field errors\r\n    const [formErrors, setFormErrors] = useState({\r\n        fullName: false,\r\n        address: false,\r\n        city: false,\r\n        state: false,\r\n        zip: false,\r\n        country: false,\r\n        email: false,\r\n    });\r\n\r\n    // Handle changes to form fields\r\n    const handleFormChange = (event) => {\r\n        setFormFields({\r\n            ...formFields,\r\n            [event.target.id]: event.target.value,\r\n        });\r\n        // Clear error message when user starts typing\r\n        setFormErrors({\r\n            ...formErrors,\r\n            [event.target.id]: false,\r\n        });\r\n    };\r\n\r\n    // Handle form submission\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        // Check for required fields\r\n        let errors = {\r\n            fullName: false,\r\n            address: false,\r\n            city: false,\r\n            state: false,\r\n            zip: false,\r\n            country: false,\r\n            email: false,\r\n        };\r\n        Object.keys(formFields).forEach((key) => {\r\n            if (!formFields[key]) {\r\n                errors[key] = true;\r\n            }\r\n        });\r\n        setFormErrors(errors);\r\n        // Submit form if no errors\r\n        if (Object.values(errors).every((value) => !value)) {\r\n            console.log('Form submitted');\r\n            // TODO: Send form data to server\r\n            console.log(formFields);\r\n            handleOpenCreditCardModal();\r\n        }\r\n    };\r\n\r\n    const onCardSubmit = (e) => {\r\n        console.log(e, \"onCardSubmit\")\r\n        submitOrder({\r\n            card: { ...e },\r\n            ...formFields,\r\n            items: foodlistData,\r\n            amount: price,\r\n            tax: 0.13,\r\n            totalAmount: +(price + price * 0.13).toFixed(2),\r\n            user: user._id\r\n        }).then((res) => {\r\n            console.log(res, \"api response 1243\");\r\n            localStorage.removeItem(\"cart\")\r\n            swal(\"Success!\", `The order has been placed`, \"success\").then(() => {\r\n                navigate(\"/Orders\");\r\n            });\r\n            dispatch(\r\n                clearCart()\r\n            );\r\n\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <Navbar />\r\n                <Container maxWidth=\"md\" className={classes.root}>\r\n                    <Typography variant=\"h4\" gutterBottom>\r\n                        Checkout\r\n                    </Typography>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12} md={6}>\r\n                            <Typography variant=\"h6\" gutterBottom>\r\n                                Shipping Address\r\n                            </Typography>\r\n                            <TextField\r\n                                required\r\n                                id=\"fullName\"\r\n                                label=\"Full Name\"\r\n                                fullWidth\r\n                                value={formFields.fullName}\r\n                                onChange={handleFormChange}\r\n                                error={formErrors.fullName}\r\n                                helperText={formErrors.fullName ? 'This field is required' : ''}\r\n                            />\r\n                            <TextField\r\n                                required\r\n                                id=\"address\"\r\n                                label=\"Address\"\r\n                                fullWidth\r\n                                value={formFields.address}\r\n                                onChange={handleFormChange}\r\n                                error={formErrors.address}\r\n                                helperText={formErrors.address ? 'This field is required' : ''}\r\n                            />\r\n                            <TextField\r\n                                required\r\n                                id=\"city\"\r\n                                label=\"City\"\r\n                                fullWidth\r\n                                value={formFields.city}\r\n                                onChange={handleFormChange}\r\n                                error={formErrors.city}\r\n                                helperText={formErrors.city ? 'This field is required' : ''}\r\n                            />\r\n                            <TextField\r\n                                required\r\n                                id=\"state\"\r\n                                label=\"State/Province/Region\"\r\n                                fullWidth\r\n                                value={formFields.state}\r\n                                onChange={handleFormChange}\r\n                                error={formErrors.state}\r\n                                helperText={formErrors.state ? 'This field is required' : ''}\r\n                            />\r\n                            <TextField\r\n                                required\r\n                                id=\"zip\"\r\n                                label=\"Zip / Postal code\"\r\n                                fullWidth\r\n                                value={formFields.zip}\r\n                                onChange={handleFormChange}\r\n                                error={formErrors.zip}\r\n                                helperText={formErrors.zip ? 'This field is required' : ''}\r\n                            />\r\n                            <TextField\r\n                                required\r\n                                id=\"country\"\r\n                                label=\"Country\"\r\n                                fullWidth\r\n                                value={formFields.country}\r\n                                onChange={handleFormChange}\r\n                                error={formErrors.country}\r\n                                helperText={formErrors.country ? 'This field is required' : ''}\r\n                            />\r\n                            <br /><br /><br />\r\n                            <Typography variant=\"h6\" gutterBottom>\r\n                                Contact\r\n                            </Typography>\r\n                            <TextField\r\n                                required\r\n                                id=\"email\"\r\n                                label=\"Email\"\r\n                                fullWidth\r\n                                value={formFields.email}\r\n                                onChange={handleFormChange}\r\n                                error={formErrors.email}\r\n                                helperText={formErrors.email ? 'This field is required' : ''}\r\n                            />\r\n                            <TextField\r\n                                id=\"phone\"\r\n                                label=\"Phone\"\r\n                                fullWidth\r\n                                value={formFields.phone}\r\n                                onChange={handleFormChange}\r\n                                error={formErrors.phone}\r\n                                helperText={formErrors.phone ? 'This field is required' : ''}\r\n                            />\r\n                            <TopButton type=\"filled\"\r\n                                variant=\"contained\"\r\n\r\n                                className={classes.button}\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                Place Order\r\n                            </TopButton>\r\n                            &nbsp;&nbsp;\r\n                            <TopButton\r\n                                variant=\"contained\"\r\n                                fullWidth\r\n                                className={classes.button}\r\n                                onClick={(e) => navigate(\"/Cart\")}\r\n                            >\r\n                                Back to Cart\r\n                            </TopButton>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <Card>\r\n                                <CardContent>\r\n                                    <Typography variant=\"h6\" gutterBottom>\r\n                                        Order Summary\r\n                                    </Typography>\r\n                                    <List sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\r\n                                        {foodlistData.map((product) => {\r\n                                            return (\r\n                                                <>\r\n                                                    <ListItem key={product._id}>\r\n                                                        <ListItemAvatar>\r\n                                                            <img className={classes.cardImage} src={product.img} alt=\"\" />\r\n                                                        </ListItemAvatar>\r\n                                                        <ListItemText primary={product.title} secondary={`${product.quantity} x ${product.price}$ = $${(product.quantity * product.price).toFixed(2)}`} />\r\n                                                    </ListItem>\r\n                                                </>\r\n                                            );\r\n                                        })\r\n                                        }\r\n                                    </List>\r\n                                    <Divider />\r\n                                    <br /><br />\r\n                                    <Typography variant=\"subtitle1\" gutterBottom>\r\n                                        Subtotal: {price}$\r\n                                    </Typography>\r\n                                    <Typography variant=\"subtitle1\" gutterBottom>\r\n                                        Shipping: Free\r\n                                    </Typography>\r\n                                    <Typography variant=\"subtitle1\" gutterBottom>\r\n                                        Tax (GST): {(price * 0.13).toFixed(2)}$\r\n                                    </Typography>\r\n                                    <Divider />\r\n                                    <br /><br />\r\n                                    <Typography Typography variant=\"h6\" gutterBottom>\r\n                                        Total: ${(price + price * 0.13).toFixed(2)}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </Container >\r\n            <Modal\r\n                open={openCardModal}\r\n                onClose={handleCloseCardModal}\r\n                className={classes.modal}\r\n                aria-labelledby=\"modal-title\"\r\n                aria-describedby=\"modal-description\"\r\n            >\r\n                <div className={classes.paper}>\r\n                    <CreditCards handleCloseCardModal={handleCloseCardModal} onCardSubmit={onCardSubmit} />\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CheckoutPage;\r\n"]},"metadata":{},"sourceType":"module"}