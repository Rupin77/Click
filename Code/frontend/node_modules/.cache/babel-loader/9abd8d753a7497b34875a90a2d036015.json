{"ast":null,"code":"var _jsxFileName = \"T:\\\\School\\\\Click\\\\Group_09\\\\Code\\\\frontend\\\\src\\\\pages\\\\OrderPage.jsx\",\n    _s = $RefreshSig$();\n\nimport { Chip, CircularProgress, Container, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Navbar from '../components/Navbar';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@material-ui/core';\nimport { useGetOrdersByUserMutation } from '../api/orders';\nimport Pagination from 'react-js-pagination';\nimport '../components/pagination.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TopButton = styled.button`\n  padding: 10px;\n  font-weight: 600;\n  cursor: pointer;\n  border: ${props => props.type === \"filled\" && \"non\"};\n  background-color: ${props => props.type === \"filled\" ? \"black\" : \"transparent\"};\n  color: ${props => props.type === \"filled\" && \"white\"};\n`;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nconst OrdersPage = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const [getOrders, {\n    isLoading\n  }] = useGetOrdersByUserMutation();\n  const rows = [{\n    id: 1,\n    name: 'John Doe',\n    email: 'john.doe@example.com'\n  }, {\n    id: 2,\n    name: 'Jane Smith',\n    email: 'jane.smith@example.com'\n  }, {\n    id: 3,\n    name: 'Bob Johnson',\n    email: 'bob.johnson@example.com'\n  }];\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  useEffect(() => {\n    getOrders({\n      userId: user._id\n    }).then(res => {\n      console.log(res, \"asdfasdfa\");\n      setOrders(res.data);\n    });\n  }, []);\n\n  const handlePageChange = e => {\n    getOrders({\n      userId: user._id,\n      page: e\n    }).then(res => {\n      setOrders(res.data);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"md\",\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          children: \"My Orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n          component: Paper,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Items\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: orders && orders.orders && orders.orders.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: row._id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: row.items.map(item => /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(Chip, {\n                      label: `${item.quantity} x ${item.title}`,\n                      variant: \"outlined\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 90,\n                      columnNumber: 53\n                    }, this), \"\\xA0\"]\n                  }, void 0, true))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: [\"$\", row.totalAmount]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 41\n                }, this)]\n              }, row._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n          activePage: +(orders === null || orders === void 0 ? void 0 : orders.page) || 1,\n          itemsCountPerPage: +(orders === null || orders === void 0 ? void 0 : orders.perPage) || 10,\n          totalItemsCount: (orders === null || orders === void 0 ? void 0 : orders.total) || 0,\n          pageRangeDisplayed: 5,\n          onChange: handlePageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(OrdersPage, \"mPdbu+7lBYHVabsxIJzdojQxm9Y=\", false, function () {\n  return [useNavigate, useStyles, useGetOrdersByUserMutation];\n});\n\n_c = OrdersPage;\nexport default OrdersPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrdersPage\");","map":{"version":3,"sources":["T:/School/Click/Group_09/Code/frontend/src/pages/OrderPage.jsx"],"names":["Chip","CircularProgress","Container","Typography","makeStyles","React","useEffect","useState","useNavigate","styled","Navbar","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useGetOrdersByUserMutation","Pagination","TopButton","button","props","type","useStyles","theme","root","marginTop","spacing","marginBottom","OrdersPage","navigate","classes","orders","setOrders","getOrders","isLoading","rows","id","name","email","user","JSON","parse","localStorage","getItem","userId","_id","then","res","console","log","data","handlePageChange","e","page","map","row","items","item","quantity","title","totalAmount","perPage","total"],"mappings":"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","sourcesContent":["import { Chip, CircularProgress, Container, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Navbar from '../components/Navbar';\r\n\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { useGetOrdersByUserMutation } from '../api/orders';\r\n\r\nimport Pagination from 'react-js-pagination';\r\nimport '../components/pagination.css';\r\n\r\nconst TopButton = styled.button`\r\n  padding: 10px;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  border: ${(props) => props.type === \"filled\" && \"non\"};\r\n  background-color: ${(props) =>\r\n        props.type === \"filled\" ? \"black\" : \"transparent\"};\r\n  color: ${(props) => props.type === \"filled\" && \"white\"};\r\n`;\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n    }\r\n}));\r\n\r\nconst OrdersPage = () => {\r\n\r\n    const navigate = useNavigate();\r\n    const classes = useStyles();\r\n    const [orders, setOrders] = useState([]);\r\n    const [getOrders, { isLoading }] = useGetOrdersByUserMutation();\r\n\r\n    const rows = [\r\n        { id: 1, name: 'John Doe', email: 'john.doe@example.com' },\r\n        { id: 2, name: 'Jane Smith', email: 'jane.smith@example.com' },\r\n        { id: 3, name: 'Bob Johnson', email: 'bob.johnson@example.com' },\r\n    ];\r\n\r\n\r\n    const user = JSON.parse(localStorage.getItem(\"user\"))\r\n\r\n    useEffect(() => {\r\n        getOrders({ userId: user._id }).then((res) => {\r\n            console.log(res, \"asdfasdfa\");\r\n            setOrders(res.data)\r\n        })\r\n    }, []);\r\n\r\n    const handlePageChange = (e) => {\r\n        getOrders({ userId: user._id, page: e }).then((res) => {\r\n            setOrders(res.data)\r\n        })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <Navbar />\r\n                <Container maxWidth=\"md\" className={classes.root}>\r\n                    <Typography variant=\"h4\" gutterBottom>\r\n                        My Orders\r\n                    </Typography>\r\n                    {isLoading &&\r\n                        <CircularProgress />\r\n                    }\r\n                    <TableContainer component={Paper}>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>ID</TableCell>\r\n                                    <TableCell>Items</TableCell>\r\n                                    <TableCell>Amount</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {orders && orders.orders && orders.orders.map((row) => (\r\n                                    <TableRow key={row._id}>\r\n                                        <TableCell>{row._id}</TableCell>\r\n                                        <TableCell>\r\n                                            {row.items.map((item) => (\r\n                                                <>\r\n                                                    <Chip label={`${item.quantity} x ${item.title}`} variant=\"outlined\" />\r\n                                                    &nbsp;\r\n                                                </>\r\n                                            ))\r\n                                            }\r\n                                        </TableCell>\r\n                                        <TableCell>${row.totalAmount}</TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n\r\n                    <Pagination\r\n                        activePage={+orders?.page || 1}\r\n                        itemsCountPerPage={+orders?.perPage || 10}\r\n                        totalItemsCount={orders?.total || 0}\r\n                        pageRangeDisplayed={5}\r\n                        onChange={handlePageChange}\r\n                    />\r\n                </Container>\r\n            </Container >\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrdersPage;\r\n"]},"metadata":{},"sourceType":"module"}