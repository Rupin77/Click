{"ast":null,"code":"var _jsxFileName = \"T:\\\\School\\\\Click\\\\Group_09\\\\Code\\\\frontend\\\\src\\\\components\\\\Admin\\\\Layout.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { makeStyles, AppBar, Toolbar, IconButton, Typography, Drawer, List, ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerContainer: {\n    overflow: \"auto\"\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  }\n}));\n\nfunction AdminLayout({\n  children\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [drawerOpen, setDrawerOpen] = useState(false);\n\n  const handleDrawerOpen = () => {\n    setDrawerOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setDrawerOpen(false);\n  };\n\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"fixed\",\n      className: classes.appBar,\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"inherit\",\n          \"aria-label\": \"open drawer\",\n          onClick: handleDrawerOpen,\n          edge: \"start\",\n          className: classes.menuButton,\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          noWrap: true,\n          children: \"Admin Panel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      className: classes.drawer,\n      variant: \"temporary\",\n      open: drawerOpen,\n      onClose: handleDrawerClose,\n      classes: {\n        paper: classes.drawerPaper\n      },\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.drawerContainer,\n        children: /*#__PURE__*/_jsxDEV(List, {\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            onClick: () => navigate(\"/\"),\n            children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: /*#__PURE__*/_jsxDEV(HomeIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: /*#__PURE__*/_jsxDEV(DashboardIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: \"Products\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: classes.content,\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AdminLayout, \"oYEOjv9kRDThK2e0fJgsMozlMPs=\", false, function () {\n  return [useStyles, useNavigate];\n});\n\n_c = AdminLayout;\nexport default AdminLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminLayout\");","map":{"version":3,"sources":["T:/School/Click/Group_09/Code/frontend/src/components/Admin/Layout.jsx"],"names":["React","useState","makeStyles","AppBar","Toolbar","IconButton","Typography","Drawer","List","ListItem","ListItemIcon","ListItemText","MenuIcon","DashboardIcon","HomeIcon","useNavigate","drawerWidth","useStyles","theme","root","display","appBar","zIndex","drawer","menuButton","marginRight","spacing","width","flexShrink","drawerPaper","drawerContainer","overflow","content","flexGrow","padding","AdminLayout","children","classes","drawerOpen","setDrawerOpen","handleDrawerOpen","handleDrawerClose","navigate","paper"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n    makeStyles,\r\n    AppBar,\r\n    Toolbar,\r\n    IconButton,\r\n    Typography,\r\n    Drawer,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerContainer: {\r\n        overflow: \"auto\",\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nfunction AdminLayout({ children }) {\r\n    const classes = useStyles();\r\n    const [drawerOpen, setDrawerOpen] = useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setDrawerOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setDrawerOpen(false);\r\n    };\r\n\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"fixed\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={classes.menuButton}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        Admin Panel\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"temporary\"\r\n                open={drawerOpen}\r\n                onClose={handleDrawerClose}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <Toolbar />\r\n                <div className={classes.drawerContainer}>\r\n                    <List>\r\n                        <ListItem button onClick={() => navigate(\"/\")}>\r\n                            <ListItemIcon>\r\n                                <HomeIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Home\" />\r\n                        </ListItem>\r\n                        <ListItem button>\r\n                            <ListItemIcon>\r\n                                <DashboardIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Products\" />\r\n                        </ListItem>\r\n                    </List>\r\n                </div>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <Toolbar />\r\n                {children}\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminLayout;\r\n"]},"metadata":{},"sourceType":"module"}